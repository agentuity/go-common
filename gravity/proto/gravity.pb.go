// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: gravity.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProvisionMachineRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Region           string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`                                             // the region for the machine
	AvailabilityZone string                 `protobuf:"bytes,2,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"` // the availability zone for the machine
	Provider         string                 `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`                                         // the provider for the machine
	InstanceId       string                 `protobuf:"bytes,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`                   // the unique machine id for the server
	PrivateIpv4      string                 `protobuf:"bytes,5,opt,name=private_ipv4,json=privateIpv4,proto3" json:"private_ipv4,omitempty"`                // the ip v4 address to use for the server
	PublicKey        string                 `protobuf:"bytes,6,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`                      // the public key to use for the server
	Hostname         string                 `protobuf:"bytes,7,opt,name=hostname,proto3" json:"hostname,omitempty"`                                         // the hostname of the server
	ErrorMessage     string                 `protobuf:"bytes,8,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`             // the error message if the machine has an error
	// during boot or provisioning
	Ephemeral     bool `protobuf:"varint,9,opt,name=ephemeral,proto3" json:"ephemeral,omitempty"` // if the machine is ephemeral
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProvisionMachineRequest) Reset() {
	*x = ProvisionMachineRequest{}
	mi := &file_gravity_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProvisionMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionMachineRequest) ProtoMessage() {}

func (x *ProvisionMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionMachineRequest.ProtoReflect.Descriptor instead.
func (*ProvisionMachineRequest) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{0}
}

func (x *ProvisionMachineRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ProvisionMachineRequest) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

func (x *ProvisionMachineRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ProvisionMachineRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ProvisionMachineRequest) GetPrivateIpv4() string {
	if x != nil {
		return x.PrivateIpv4
	}
	return ""
}

func (x *ProvisionMachineRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *ProvisionMachineRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ProvisionMachineRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ProvisionMachineRequest) GetEphemeral() bool {
	if x != nil {
		return x.Ephemeral
	}
	return false
}

type ProvisionMachineResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	CaCertificate        []byte                 `protobuf:"bytes,1,opt,name=ca_certificate,json=caCertificate,proto3" json:"ca_certificate,omitempty"`                        // the CA certificate to trust for self-signed server certificates
	Certificate          []byte                 `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`                                                 // the cert to use for the server
	PrivateKey           []byte                 `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`                                 // the key to use for the server
	Expires              *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires,proto3" json:"expires,omitempty"`                                                         // the expiration time of the certificates
	MachineToken         string                 `protobuf:"bytes,5,opt,name=machine_token,json=machineToken,proto3" json:"machine_token,omitempty"`                           // the machine token to use for communication with APIs
	OrgId                string                 `protobuf:"bytes,6,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`                                                // the organization id for the machine
	ClusterId            string                 `protobuf:"bytes,7,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`                                    // the cluster id for the machine
	DeploymentPrivateKey []byte                 `protobuf:"bytes,8,opt,name=deployment_private_key,json=deploymentPrivateKey,proto3" json:"deployment_private_key,omitempty"` // the sourcecode private key for the organization, usually nil unless
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ProvisionMachineResponse) Reset() {
	*x = ProvisionMachineResponse{}
	mi := &file_gravity_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProvisionMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionMachineResponse) ProtoMessage() {}

func (x *ProvisionMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionMachineResponse.ProtoReflect.Descriptor instead.
func (*ProvisionMachineResponse) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{1}
}

func (x *ProvisionMachineResponse) GetCaCertificate() []byte {
	if x != nil {
		return x.CaCertificate
	}
	return nil
}

func (x *ProvisionMachineResponse) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *ProvisionMachineResponse) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *ProvisionMachineResponse) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

func (x *ProvisionMachineResponse) GetMachineToken() string {
	if x != nil {
		return x.MachineToken
	}
	return ""
}

func (x *ProvisionMachineResponse) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ProvisionMachineResponse) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ProvisionMachineResponse) GetDeploymentPrivateKey() []byte {
	if x != nil {
		return x.DeploymentPrivateKey
	}
	return nil
}

// ControlMessage represents all control plane communications
type ControlMessage struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Id       string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StreamId string                 `protobuf:"bytes,2,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"` // Logical stream identifier for multiplexing
	// Types that are valid to be assigned to MessageType:
	//
	//	*ControlMessage_Connect
	//	*ControlMessage_ConnectResponse
	//	*ControlMessage_Close
	//	*ControlMessage_RouteDeployment
	//	*ControlMessage_RouteDeploymentResponse
	//	*ControlMessage_Unprovision
	//	*ControlMessage_Ping
	//	*ControlMessage_Pong
	//	*ControlMessage_Report
	//	*ControlMessage_Activity
	//	*ControlMessage_Pause
	//	*ControlMessage_Resume
	//	*ControlMessage_ConfigUpdate
	//	*ControlMessage_ConfigUpdateResponse
	//	*ControlMessage_Response
	//	*ControlMessage_Event
	MessageType   isControlMessage_MessageType `protobuf_oneof:"message_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlMessage) Reset() {
	*x = ControlMessage{}
	mi := &file_gravity_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage) ProtoMessage() {}

func (x *ControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlMessage.ProtoReflect.Descriptor instead.
func (*ControlMessage) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{2}
}

func (x *ControlMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ControlMessage) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *ControlMessage) GetMessageType() isControlMessage_MessageType {
	if x != nil {
		return x.MessageType
	}
	return nil
}

func (x *ControlMessage) GetConnect() *ConnectRequest {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_Connect); ok {
			return x.Connect
		}
	}
	return nil
}

func (x *ControlMessage) GetConnectResponse() *ConnectResponse {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_ConnectResponse); ok {
			return x.ConnectResponse
		}
	}
	return nil
}

func (x *ControlMessage) GetClose() *CloseRequest {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_Close); ok {
			return x.Close
		}
	}
	return nil
}

func (x *ControlMessage) GetRouteDeployment() *RouteDeploymentRequest {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_RouteDeployment); ok {
			return x.RouteDeployment
		}
	}
	return nil
}

func (x *ControlMessage) GetRouteDeploymentResponse() *RouteDeploymentResponse {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_RouteDeploymentResponse); ok {
			return x.RouteDeploymentResponse
		}
	}
	return nil
}

func (x *ControlMessage) GetUnprovision() *UnprovisionRequest {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_Unprovision); ok {
			return x.Unprovision
		}
	}
	return nil
}

func (x *ControlMessage) GetPing() *PingRequest {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_Ping); ok {
			return x.Ping
		}
	}
	return nil
}

func (x *ControlMessage) GetPong() *PongResponse {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_Pong); ok {
			return x.Pong
		}
	}
	return nil
}

func (x *ControlMessage) GetReport() *ReportRequest {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_Report); ok {
			return x.Report
		}
	}
	return nil
}

func (x *ControlMessage) GetActivity() *ActivityRequest {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_Activity); ok {
			return x.Activity
		}
	}
	return nil
}

func (x *ControlMessage) GetPause() *PauseRequest {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_Pause); ok {
			return x.Pause
		}
	}
	return nil
}

func (x *ControlMessage) GetResume() *ResumeRequest {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_Resume); ok {
			return x.Resume
		}
	}
	return nil
}

func (x *ControlMessage) GetConfigUpdate() *ConfigurationUpdate {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_ConfigUpdate); ok {
			return x.ConfigUpdate
		}
	}
	return nil
}

func (x *ControlMessage) GetConfigUpdateResponse() *ConfigurationUpdateResponse {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_ConfigUpdateResponse); ok {
			return x.ConfigUpdateResponse
		}
	}
	return nil
}

func (x *ControlMessage) GetResponse() *ProtocolResponse {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_Response); ok {
			return x.Response
		}
	}
	return nil
}

func (x *ControlMessage) GetEvent() *ProtocolEvent {
	if x != nil {
		if x, ok := x.MessageType.(*ControlMessage_Event); ok {
			return x.Event
		}
	}
	return nil
}

type isControlMessage_MessageType interface {
	isControlMessage_MessageType()
}

type ControlMessage_Connect struct {
	// Connection lifecycle (10-19)
	Connect *ConnectRequest `protobuf:"bytes,10,opt,name=connect,proto3,oneof"`
}

type ControlMessage_ConnectResponse struct {
	ConnectResponse *ConnectResponse `protobuf:"bytes,11,opt,name=connect_response,json=connectResponse,proto3,oneof"`
}

type ControlMessage_Close struct {
	Close *CloseRequest `protobuf:"bytes,15,opt,name=close,proto3,oneof"`
}

type ControlMessage_RouteDeployment struct {
	// Deployment management (20-29)
	RouteDeployment *RouteDeploymentRequest `protobuf:"bytes,22,opt,name=route_deployment,json=routeDeployment,proto3,oneof"`
}

type ControlMessage_RouteDeploymentResponse struct {
	RouteDeploymentResponse *RouteDeploymentResponse `protobuf:"bytes,23,opt,name=route_deployment_response,json=routeDeploymentResponse,proto3,oneof"`
}

type ControlMessage_Unprovision struct {
	Unprovision *UnprovisionRequest `protobuf:"bytes,25,opt,name=unprovision,proto3,oneof"`
}

type ControlMessage_Ping struct {
	// Health and monitoring (30-39)
	Ping *PingRequest `protobuf:"bytes,30,opt,name=ping,proto3,oneof"`
}

type ControlMessage_Pong struct {
	Pong *PongResponse `protobuf:"bytes,31,opt,name=pong,proto3,oneof"`
}

type ControlMessage_Report struct {
	Report *ReportRequest `protobuf:"bytes,32,opt,name=report,proto3,oneof"`
}

type ControlMessage_Activity struct {
	Activity *ActivityRequest `protobuf:"bytes,33,opt,name=activity,proto3,oneof"`
}

type ControlMessage_Pause struct {
	// Session control (40-49)
	Pause *PauseRequest `protobuf:"bytes,40,opt,name=pause,proto3,oneof"`
}

type ControlMessage_Resume struct {
	Resume *ResumeRequest `protobuf:"bytes,41,opt,name=resume,proto3,oneof"`
}

type ControlMessage_ConfigUpdate struct {
	// Configuration management (45-49)
	ConfigUpdate *ConfigurationUpdate `protobuf:"bytes,45,opt,name=config_update,json=configUpdate,proto3,oneof"`
}

type ControlMessage_ConfigUpdateResponse struct {
	ConfigUpdateResponse *ConfigurationUpdateResponse `protobuf:"bytes,46,opt,name=config_update_response,json=configUpdateResponse,proto3,oneof"`
}

type ControlMessage_Response struct {
	// Generic protocol messages (50-59)
	Response *ProtocolResponse `protobuf:"bytes,50,opt,name=response,proto3,oneof"`
}

type ControlMessage_Event struct {
	Event *ProtocolEvent `protobuf:"bytes,51,opt,name=event,proto3,oneof"`
}

func (*ControlMessage_Connect) isControlMessage_MessageType() {}

func (*ControlMessage_ConnectResponse) isControlMessage_MessageType() {}

func (*ControlMessage_Close) isControlMessage_MessageType() {}

func (*ControlMessage_RouteDeployment) isControlMessage_MessageType() {}

func (*ControlMessage_RouteDeploymentResponse) isControlMessage_MessageType() {}

func (*ControlMessage_Unprovision) isControlMessage_MessageType() {}

func (*ControlMessage_Ping) isControlMessage_MessageType() {}

func (*ControlMessage_Pong) isControlMessage_MessageType() {}

func (*ControlMessage_Report) isControlMessage_MessageType() {}

func (*ControlMessage_Activity) isControlMessage_MessageType() {}

func (*ControlMessage_Pause) isControlMessage_MessageType() {}

func (*ControlMessage_Resume) isControlMessage_MessageType() {}

func (*ControlMessage_ConfigUpdate) isControlMessage_MessageType() {}

func (*ControlMessage_ConfigUpdateResponse) isControlMessage_MessageType() {}

func (*ControlMessage_Response) isControlMessage_MessageType() {}

func (*ControlMessage_Event) isControlMessage_MessageType() {}

// TunnelPacket represents network packet data for the tunnel
type TunnelPacket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`                         // Raw IP packet data
	StreamId      string                 `protobuf:"bytes,2,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"` // Logical stream identifier for multiplexing
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TunnelPacket) Reset() {
	*x = TunnelPacket{}
	mi := &file_gravity_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TunnelPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelPacket) ProtoMessage() {}

func (x *TunnelPacket) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelPacket.ProtoReflect.Descriptor instead.
func (*TunnelPacket) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{3}
}

func (x *TunnelPacket) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TunnelPacket) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

// ClientCapabilities defines what capabilities a client supports
type ClientCapabilities struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ProvisionDeployments   bool                   `protobuf:"varint,1,opt,name=provision_deployments,json=provisionDeployments,proto3" json:"provision_deployments,omitempty"`       // Can handle provision deployment requests
	UnprovisionDeployments bool                   `protobuf:"varint,2,opt,name=unprovision_deployments,json=unprovisionDeployments,proto3" json:"unprovision_deployments,omitempty"` // Can handle unprovision deployment requests
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ClientCapabilities) Reset() {
	*x = ClientCapabilities{}
	mi := &file_gravity_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCapabilities) ProtoMessage() {}

func (x *ClientCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCapabilities.ProtoReflect.Descriptor instead.
func (*ClientCapabilities) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{4}
}

func (x *ClientCapabilities) GetProvisionDeployments() bool {
	if x != nil {
		return x.ProvisionDeployments
	}
	return false
}

func (x *ClientCapabilities) GetUnprovisionDeployments() bool {
	if x != nil {
		return x.UnprovisionDeployments
	}
	return false
}

// Connect request from client to Gravity
type ConnectRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProtocolVersion int32                  `protobuf:"varint,1,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"` // Protocol version number for compatibility
	ClientVersion   string                 `protobuf:"bytes,2,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`        // Version string of the client (e.g., SHA, semver)
	ClientName      string                 `protobuf:"bytes,3,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`                 // Name of the client application (e.g., "hadron")
	Capabilities    *ClientCapabilities    `protobuf:"bytes,4,opt,name=capabilities,proto3" json:"capabilities,omitempty"`                               // Client capabilities for this connection
	Deployments     []*ExistingDeployment  `protobuf:"bytes,5,rep,name=deployments,proto3" json:"deployments,omitempty"`                                 // List of existing deployments to restore
	HostInfo        *HostInfo              `protobuf:"bytes,6,opt,name=host_info,json=hostInfo,proto3" json:"host_info,omitempty"`                       // Information about the host system
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_gravity_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{5}
}

func (x *ConnectRequest) GetProtocolVersion() int32 {
	if x != nil {
		return x.ProtocolVersion
	}
	return 0
}

func (x *ConnectRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *ConnectRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *ConnectRequest) GetCapabilities() *ClientCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *ConnectRequest) GetDeployments() []*ExistingDeployment {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *ConnectRequest) GetHostInfo() *HostInfo {
	if x != nil {
		return x.HostInfo
	}
	return nil
}

// Connect response from Gravity to Hadron
type ConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OtlpUrl       string                 `protobuf:"bytes,1,opt,name=otlp_url,json=otlpUrl,proto3" json:"otlp_url,omitempty"`             // OpenTelemetry endpoint URL for metrics
	ApiUrl        string                 `protobuf:"bytes,3,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty"`                // Base URL for API operations
	Environment   []string               `protobuf:"bytes,4,rep,name=environment,proto3" json:"environment,omitempty"`                    // Environment variables to set
	HostMapping   []*HostMapping         `protobuf:"bytes,5,rep,name=host_mapping,json=hostMapping,proto3" json:"host_mapping,omitempty"` // Host to IP address mappings
	SubnetRoutes  []string               `protobuf:"bytes,6,rep,name=subnet_routes,json=subnetRoutes,proto3" json:"subnet_routes,omitempty"`
	GravityServer string                 `protobuf:"bytes,7,opt,name=gravity_server,json=gravityServer,proto3" json:"gravity_server,omitempty"` // the gravity server that we're connected to
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_gravity_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{6}
}

func (x *ConnectResponse) GetOtlpUrl() string {
	if x != nil {
		return x.OtlpUrl
	}
	return ""
}

func (x *ConnectResponse) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *ConnectResponse) GetEnvironment() []string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *ConnectResponse) GetHostMapping() []*HostMapping {
	if x != nil {
		return x.HostMapping
	}
	return nil
}

func (x *ConnectResponse) GetSubnetRoutes() []string {
	if x != nil {
		return x.SubnetRoutes
	}
	return nil
}

func (x *ConnectResponse) GetGravityServer() string {
	if x != nil {
		return x.GravityServer
	}
	return ""
}

type RouteDeploymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"` // Unique identifier for the deployment
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`                             // Hostname for the deployment
	VirtualIp     string                 `protobuf:"bytes,3,opt,name=virtual_ip,json=virtualIp,proto3" json:"virtual_ip,omitempty"`          // Hadron virtual IP for the deployment
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteDeploymentRequest) Reset() {
	*x = RouteDeploymentRequest{}
	mi := &file_gravity_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteDeploymentRequest) ProtoMessage() {}

func (x *RouteDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteDeploymentRequest.ProtoReflect.Descriptor instead.
func (*RouteDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{7}
}

func (x *RouteDeploymentRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *RouteDeploymentRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RouteDeploymentRequest) GetVirtualIp() string {
	if x != nil {
		return x.VirtualIp
	}
	return ""
}

type RouteDeploymentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteDeploymentResponse) Reset() {
	*x = RouteDeploymentResponse{}
	mi := &file_gravity_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteDeploymentResponse) ProtoMessage() {}

func (x *RouteDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteDeploymentResponse.ProtoReflect.Descriptor instead.
func (*RouteDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{8}
}

func (x *RouteDeploymentResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

// Unprovision request
type UnprovisionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"` // Unique identifier of deployment to remove
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnprovisionRequest) Reset() {
	*x = UnprovisionRequest{}
	mi := &file_gravity_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnprovisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnprovisionRequest) ProtoMessage() {}

func (x *UnprovisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnprovisionRequest.ProtoReflect.Descriptor instead.
func (*UnprovisionRequest) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{9}
}

func (x *UnprovisionRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

// Report request for metrics
type ReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       *ServerMetrics         `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"` // Comprehensive server metrics and performance data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportRequest) Reset() {
	*x = ReportRequest{}
	mi := &file_gravity_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRequest) ProtoMessage() {}

func (x *ReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRequest.ProtoReflect.Descriptor instead.
func (*ReportRequest) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{10}
}

func (x *ReportRequest) GetMetrics() *ServerMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Activity request for HTTP event tracking
type ActivityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*HTTPEvent           `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"` // Batch of HTTP request/response event details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityRequest) Reset() {
	*x = ActivityRequest{}
	mi := &file_gravity_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityRequest) ProtoMessage() {}

func (x *ActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityRequest.ProtoReflect.Descriptor instead.
func (*ActivityRequest) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{11}
}

func (x *ActivityRequest) GetEvents() []*HTTPEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

// Ping request for health checking
type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_gravity_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{12}
}

func (x *PingRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Pong response
type PongResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PongResponse) Reset() {
	*x = PongResponse{}
	mi := &file_gravity_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongResponse) ProtoMessage() {}

func (x *PongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongResponse.ProtoReflect.Descriptor instead.
func (*PongResponse) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{13}
}

func (x *PongResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Close request
type CloseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"` // Reason for closing the connection
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	mi := &file_gravity_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{14}
}

func (x *CloseRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Pause request
type PauseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"` // Reason for pausing the session
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseRequest) Reset() {
	*x = PauseRequest{}
	mi := &file_gravity_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseRequest) ProtoMessage() {}

func (x *PauseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseRequest.ProtoReflect.Descriptor instead.
func (*PauseRequest) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{15}
}

func (x *PauseRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Resume request
type ResumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"` // Reason for resuming the session
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeRequest) Reset() {
	*x = ResumeRequest{}
	mi := &file_gravity_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeRequest) ProtoMessage() {}

func (x *ResumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeRequest.ProtoReflect.Descriptor instead.
func (*ResumeRequest) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{16}
}

func (x *ResumeRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Generic protocol response
type ProtocolResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`            // Unique identifier for the response
	Event         string                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`      // Event type this response is for
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"` // Whether the operation was successful
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`      // Error message if operation failed
	Payload       []byte                 `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`  // Optional response payload data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtocolResponse) Reset() {
	*x = ProtocolResponse{}
	mi := &file_gravity_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtocolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolResponse) ProtoMessage() {}

func (x *ProtocolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolResponse.ProtoReflect.Descriptor instead.
func (*ProtocolResponse) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{17}
}

func (x *ProtocolResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProtocolResponse) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *ProtocolResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProtocolResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ProtocolResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Generic protocol event (server-initiated)
type ProtocolEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`           // Unique identifier for the event
	Event         string                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`     // Event type being sent
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"` // Event payload data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtocolEvent) Reset() {
	*x = ProtocolEvent{}
	mi := &file_gravity_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtocolEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolEvent) ProtoMessage() {}

func (x *ProtocolEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolEvent.ProtoReflect.Descriptor instead.
func (*ProtocolEvent) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{18}
}

func (x *ProtocolEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProtocolEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *ProtocolEvent) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Configuration update from server to client
type ConfigurationUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // Unique identifier for tracking this update
	Config        []*ConfigItem          `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty"` // List of configuration items to set
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigurationUpdate) Reset() {
	*x = ConfigurationUpdate{}
	mi := &file_gravity_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationUpdate) ProtoMessage() {}

func (x *ConfigurationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationUpdate.ProtoReflect.Descriptor instead.
func (*ConfigurationUpdate) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{19}
}

func (x *ConfigurationUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConfigurationUpdate) GetConfig() []*ConfigItem {
	if x != nil {
		return x.Config
	}
	return nil
}

// Configuration update response from client to server
type ConfigurationUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`            // Identifier matching the ConfigurationUpdate
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"` // Whether the configuration was successful
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`      // Error message if configuration failed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigurationUpdateResponse) Reset() {
	*x = ConfigurationUpdateResponse{}
	mi := &file_gravity_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationUpdateResponse) ProtoMessage() {}

func (x *ConfigurationUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationUpdateResponse.ProtoReflect.Descriptor instead.
func (*ConfigurationUpdateResponse) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{20}
}

func (x *ConfigurationUpdateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConfigurationUpdateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfigurationUpdateResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Supporting data structures
type HostInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Started       uint64                 `protobuf:"varint,1,opt,name=started,proto3" json:"started,omitempty"`                           // epoch time in milliseconds since server started
	Cpu           uint32                 `protobuf:"varint,2,opt,name=cpu,proto3" json:"cpu,omitempty"`                                   // number of CPUs
	Memory        uint64                 `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`                             // memory in bytes
	Disk          uint64                 `protobuf:"varint,4,opt,name=disk,proto3" json:"disk,omitempty"`                                 // disk space in bytes
	Ipv4Address   string                 `protobuf:"bytes,5,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"` // IPv4 address
	Ipv6Address   string                 `protobuf:"bytes,6,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"` // IPv6 address
	Hostname      string                 `protobuf:"bytes,7,opt,name=hostname,proto3" json:"hostname,omitempty"`                          // hostname
	InstanceId    string                 `protobuf:"bytes,8,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`    // instance id of the machine
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	mi := &file_gravity_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{21}
}

func (x *HostInfo) GetStarted() uint64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *HostInfo) GetCpu() uint32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *HostInfo) GetMemory() uint64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *HostInfo) GetDisk() uint64 {
	if x != nil {
		return x.Disk
	}
	return 0
}

func (x *HostInfo) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *HostInfo) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

func (x *HostInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HostInfo) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type ExistingDeployment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // Unique identifier for the deployment
	Spec          *DeploymentSpec        `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`                                  // Original deployment specification
	Started       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=started,proto3" json:"started,omitempty"`                            // When the deployment was started
	Ipv6Address   string                 `protobuf:"bytes,4,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"` // Assigned IPv6 address for the deployment
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExistingDeployment) Reset() {
	*x = ExistingDeployment{}
	mi := &file_gravity_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExistingDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistingDeployment) ProtoMessage() {}

func (x *ExistingDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistingDeployment.ProtoReflect.Descriptor instead.
func (*ExistingDeployment) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{22}
}

func (x *ExistingDeployment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExistingDeployment) GetSpec() *DeploymentSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ExistingDeployment) GetStarted() *timestamppb.Timestamp {
	if x != nil {
		return x.Started
	}
	return nil
}

func (x *ExistingDeployment) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

type DeploymentSpec struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // id of the deployment
	OrgId            string                 `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	Image            string                 `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`                                               // Container image to deploy
	Env              []string               `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`                                                   // Environment variables
	Secrets          []string               `protobuf:"bytes,5,rep,name=secrets,proto3" json:"secrets,omitempty"`                                           // Secret names to inject
	Resources        *ResourceRequirements  `protobuf:"bytes,6,opt,name=resources,proto3" json:"resources,omitempty"`                                       // CPU and memory requirements
	OrganizationCert *DeploymentCert        `protobuf:"bytes,7,opt,name=organization_cert,json=organizationCert,proto3" json:"organization_cert,omitempty"` // Organization certificates
	SkipPrivateKey   bool                   `protobuf:"varint,8,opt,name=skip_private_key,json=skipPrivateKey,proto3" json:"skip_private_key,omitempty"`    // Skip the private key for the deployment
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeploymentSpec) Reset() {
	*x = DeploymentSpec{}
	mi := &file_gravity_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentSpec) ProtoMessage() {}

func (x *DeploymentSpec) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentSpec.ProtoReflect.Descriptor instead.
func (*DeploymentSpec) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{23}
}

func (x *DeploymentSpec) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeploymentSpec) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *DeploymentSpec) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *DeploymentSpec) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *DeploymentSpec) GetSecrets() []string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *DeploymentSpec) GetResources() *ResourceRequirements {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *DeploymentSpec) GetOrganizationCert() *DeploymentCert {
	if x != nil {
		return x.OrganizationCert
	}
	return nil
}

func (x *DeploymentSpec) GetSkipPrivateKey() bool {
	if x != nil {
		return x.SkipPrivateKey
	}
	return false
}

type PortMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerPort int32                  `protobuf:"varint,1,opt,name=container_port,json=containerPort,proto3" json:"container_port,omitempty"` // Port number inside the container
	HostPort      int32                  `protobuf:"varint,2,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`                // Port number on the host (0 for auto-assign)
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`                                 // Protocol: TCP or UDP
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortMapping) Reset() {
	*x = PortMapping{}
	mi := &file_gravity_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortMapping) ProtoMessage() {}

func (x *PortMapping) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortMapping.ProtoReflect.Descriptor instead.
func (*PortMapping) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{24}
}

func (x *PortMapping) GetContainerPort() int32 {
	if x != nil {
		return x.ContainerPort
	}
	return 0
}

func (x *PortMapping) GetHostPort() int32 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *PortMapping) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type VolumeMount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostPath      string                 `protobuf:"bytes,1,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`                // Path on the host filesystem
	ContainerPath string                 `protobuf:"bytes,2,opt,name=container_path,json=containerPath,proto3" json:"container_path,omitempty"` // Path inside the container
	ReadOnly      bool                   `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`               // Whether the mount is read-only
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VolumeMount) Reset() {
	*x = VolumeMount{}
	mi := &file_gravity_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VolumeMount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeMount) ProtoMessage() {}

func (x *VolumeMount) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeMount.ProtoReflect.Descriptor instead.
func (*VolumeMount) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{25}
}

func (x *VolumeMount) GetHostPath() string {
	if x != nil {
		return x.HostPath
	}
	return ""
}

func (x *VolumeMount) GetContainerPath() string {
	if x != nil {
		return x.ContainerPath
	}
	return ""
}

func (x *VolumeMount) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

type ResourceRequirements struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemoryLimit   int64                  `protobuf:"varint,1,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`       // Maximum memory in bytes
	CpuLimit      int64                  `protobuf:"varint,2,opt,name=cpu_limit,json=cpuLimit,proto3" json:"cpu_limit,omitempty"`                // Maximum CPU in millicores (1000 = 1 core)
	MemoryRequest int64                  `protobuf:"varint,3,opt,name=memory_request,json=memoryRequest,proto3" json:"memory_request,omitempty"` // Requested memory in bytes
	CpuRequest    int64                  `protobuf:"varint,4,opt,name=cpu_request,json=cpuRequest,proto3" json:"cpu_request,omitempty"`          // Requested CPU in millicores
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceRequirements) Reset() {
	*x = ResourceRequirements{}
	mi := &file_gravity_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceRequirements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRequirements) ProtoMessage() {}

func (x *ResourceRequirements) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRequirements.ProtoReflect.Descriptor instead.
func (*ResourceRequirements) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{26}
}

func (x *ResourceRequirements) GetMemoryLimit() int64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *ResourceRequirements) GetCpuLimit() int64 {
	if x != nil {
		return x.CpuLimit
	}
	return 0
}

func (x *ResourceRequirements) GetMemoryRequest() int64 {
	if x != nil {
		return x.MemoryRequest
	}
	return 0
}

func (x *ResourceRequirements) GetCpuRequest() int64 {
	if x != nil {
		return x.CpuRequest
	}
	return 0
}

type DeploymentCert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cert          string                 `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`       // TLS certificate in PEM format
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`         // TLS private key in PEM format
	Ca            string                 `protobuf:"bytes,3,opt,name=ca,proto3" json:"ca,omitempty"`           // Certificate Authority certificate
	Dnsname       string                 `protobuf:"bytes,4,opt,name=dnsname,proto3" json:"dnsname,omitempty"` // DNS name for the certificate
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeploymentCert) Reset() {
	*x = DeploymentCert{}
	mi := &file_gravity_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentCert) ProtoMessage() {}

func (x *DeploymentCert) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentCert.ProtoReflect.Descriptor instead.
func (*DeploymentCert) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{27}
}

func (x *DeploymentCert) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *DeploymentCert) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeploymentCert) GetCa() string {
	if x != nil {
		return x.Ca
	}
	return ""
}

func (x *DeploymentCert) GetDnsname() string {
	if x != nil {
		return x.Dnsname
	}
	return ""
}

type CodeMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Env           []string               `protobuf:"bytes,1,rep,name=env,proto3" json:"env,omitempty"`         // Environment variable names
	Secrets       []string               `protobuf:"bytes,2,rep,name=secrets,proto3" json:"secrets,omitempty"` // Secret names required by the code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeMetadata) Reset() {
	*x = CodeMetadata{}
	mi := &file_gravity_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeMetadata) ProtoMessage() {}

func (x *CodeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeMetadata.ProtoReflect.Descriptor instead.
func (*CodeMetadata) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{28}
}

func (x *CodeMetadata) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *CodeMetadata) GetSecrets() []string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type Resource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // Unique resource identifier
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`                              // Current status of the resource
	Ipv6Address   string                 `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"` // Assigned IPv6 address
	Ports         []*PortMapping         `protobuf:"bytes,4,rep,name=ports,proto3" json:"ports,omitempty"`                                // Actual port mappings assigned
	Created       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`                            // When the resource was created
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_gravity_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{29}
}

func (x *Resource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Resource) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Resource) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

func (x *Resource) GetPorts() []*PortMapping {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Resource) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

type HostMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`                    // Hostname to map
	IpAddress     string                 `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"` // IP address to map the hostname to
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostMapping) Reset() {
	*x = HostMapping{}
	mi := &file_gravity_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostMapping) ProtoMessage() {}

func (x *HostMapping) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostMapping.ProtoReflect.Descriptor instead.
func (*HostMapping) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{30}
}

func (x *HostMapping) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HostMapping) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

type HTTPEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`                                 // HTTP method (GET, POST, etc.)
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`                                     // Request path
	Status        int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                                // HTTP status code
	Started       int64                  `protobuf:"varint,4,opt,name=started,proto3" json:"started,omitempty"`                              // Request start time (epoch milliseconds)
	Duration      int64                  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`                            // Request duration in milliseconds
	DeploymentId  string                 `protobuf:"bytes,6,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"` // ID of the deployment handling the request
	SessionId     string                 `protobuf:"bytes,7,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`          // Session ID for this request
	AgentId       string                 `protobuf:"bytes,8,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                // Agent identifier
	MachineId     string                 `protobuf:"bytes,9,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`          // Machine identifier
	ProjectId     string                 `protobuf:"bytes,10,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`         // Project identifier
	OrgId         string                 `protobuf:"bytes,11,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`                     // Organization identifier
	CpuUnits      int64                  `protobuf:"varint,12,opt,name=cpu_units,json=cpuUnits,proto3" json:"cpu_units,omitempty"`           // CPU units consumed
	MemoryUnits   int64                  `protobuf:"varint,13,opt,name=memory_units,json=memoryUnits,proto3" json:"memory_units,omitempty"`  // Memory units consumed
	DiskUnits     int64                  `protobuf:"varint,14,opt,name=disk_units,json=diskUnits,proto3" json:"disk_units,omitempty"`        // Disk units consumed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPEvent) Reset() {
	*x = HTTPEvent{}
	mi := &file_gravity_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPEvent) ProtoMessage() {}

func (x *HTTPEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPEvent.ProtoReflect.Descriptor instead.
func (*HTTPEvent) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{31}
}

func (x *HTTPEvent) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HTTPEvent) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HTTPEvent) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *HTTPEvent) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *HTTPEvent) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *HTTPEvent) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *HTTPEvent) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *HTTPEvent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *HTTPEvent) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *HTTPEvent) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *HTTPEvent) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *HTTPEvent) GetCpuUnits() int64 {
	if x != nil {
		return x.CpuUnits
	}
	return 0
}

func (x *HTTPEvent) GetMemoryUnits() int64 {
	if x != nil {
		return x.MemoryUnits
	}
	return 0
}

func (x *HTTPEvent) GetDiskUnits() int64 {
	if x != nil {
		return x.DiskUnits
	}
	return 0
}

type SessionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // Unique session identifier
	MachineId     string                 `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"` // Machine identifier for this session
	Connected     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=connected,proto3" json:"connected,omitempty"`                  // When the session was established
	Authenticated bool                   `protobuf:"varint,4,opt,name=authenticated,proto3" json:"authenticated,omitempty"`         // Whether the session is authenticated
	Deployments   []string               `protobuf:"bytes,5,rep,name=deployments,proto3" json:"deployments,omitempty"`              // List of deployment IDs in this session
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionInfo) Reset() {
	*x = SessionInfo{}
	mi := &file_gravity_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfo) ProtoMessage() {}

func (x *SessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfo.ProtoReflect.Descriptor instead.
func (*SessionInfo) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{32}
}

func (x *SessionInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SessionInfo) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *SessionInfo) GetConnected() *timestamppb.Timestamp {
	if x != nil {
		return x.Connected
	}
	return nil
}

func (x *SessionInfo) GetAuthenticated() bool {
	if x != nil {
		return x.Authenticated
	}
	return false
}

func (x *SessionInfo) GetDeployments() []string {
	if x != nil {
		return x.Deployments
	}
	return nil
}

// Enhanced ServerMetrics with comprehensive performance and health data
type ServerMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic server metrics (1-10)
	StartTime       int64  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                     // epoch milliseconds
	Uptime          uint64 `protobuf:"varint,2,opt,name=uptime,proto3" json:"uptime,omitempty"`                                            // milliseconds since start
	ConnectedTime   int64  `protobuf:"varint,3,opt,name=connected_time,json=connectedTime,proto3" json:"connected_time,omitempty"`         // epoch milliseconds (optional)
	LastMessageTime int64  `protobuf:"varint,4,opt,name=last_message_time,json=lastMessageTime,proto3" json:"last_message_time,omitempty"` // epoch milliseconds (optional)
	// Connection metrics (11-20)
	IsConnected      bool  `protobuf:"varint,11,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
	ReconnectCount   int64 `protobuf:"varint,12,opt,name=reconnect_count,json=reconnectCount,proto3" json:"reconnect_count,omitempty"`
	TotalConnections int64 `protobuf:"varint,13,opt,name=total_connections,json=totalConnections,proto3" json:"total_connections,omitempty"`
	// Component metrics (21-40)
	GrpcMetrics   *GRPCConnectionMetrics `protobuf:"bytes,21,opt,name=grpc_metrics,json=grpcMetrics,proto3" json:"grpc_metrics,omitempty"`
	Performance   *PerformanceMetrics    `protobuf:"bytes,22,opt,name=performance,proto3" json:"performance,omitempty"`
	MessageStats  *MessageStatistics     `protobuf:"bytes,23,opt,name=message_stats,json=messageStats,proto3" json:"message_stats,omitempty"`
	SystemMetrics *SystemResourceMetrics `protobuf:"bytes,24,opt,name=system_metrics,json=systemMetrics,proto3" json:"system_metrics,omitempty"`
	// Historical data (41-50)
	HistoricalData *HistoricalMetrics `protobuf:"bytes,41,opt,name=historical_data,json=historicalData,proto3" json:"historical_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ServerMetrics) Reset() {
	*x = ServerMetrics{}
	mi := &file_gravity_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMetrics) ProtoMessage() {}

func (x *ServerMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMetrics.ProtoReflect.Descriptor instead.
func (*ServerMetrics) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{33}
}

func (x *ServerMetrics) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ServerMetrics) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *ServerMetrics) GetConnectedTime() int64 {
	if x != nil {
		return x.ConnectedTime
	}
	return 0
}

func (x *ServerMetrics) GetLastMessageTime() int64 {
	if x != nil {
		return x.LastMessageTime
	}
	return 0
}

func (x *ServerMetrics) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

func (x *ServerMetrics) GetReconnectCount() int64 {
	if x != nil {
		return x.ReconnectCount
	}
	return 0
}

func (x *ServerMetrics) GetTotalConnections() int64 {
	if x != nil {
		return x.TotalConnections
	}
	return 0
}

func (x *ServerMetrics) GetGrpcMetrics() *GRPCConnectionMetrics {
	if x != nil {
		return x.GrpcMetrics
	}
	return nil
}

func (x *ServerMetrics) GetPerformance() *PerformanceMetrics {
	if x != nil {
		return x.Performance
	}
	return nil
}

func (x *ServerMetrics) GetMessageStats() *MessageStatistics {
	if x != nil {
		return x.MessageStats
	}
	return nil
}

func (x *ServerMetrics) GetSystemMetrics() *SystemResourceMetrics {
	if x != nil {
		return x.SystemMetrics
	}
	return nil
}

func (x *ServerMetrics) GetHistoricalData() *HistoricalMetrics {
	if x != nil {
		return x.HistoricalData
	}
	return nil
}

// GRPCConnectionMetrics contains gRPC-specific connection metrics
type GRPCConnectionMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection pool information (1-10)
	PoolSize          int32    `protobuf:"varint,1,opt,name=pool_size,json=poolSize,proto3" json:"pool_size,omitempty"`
	ActiveConnections int32    `protobuf:"varint,2,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	IdleConnections   int32    `protobuf:"varint,3,opt,name=idle_connections,json=idleConnections,proto3" json:"idle_connections,omitempty"`
	FailedConnections int32    `protobuf:"varint,4,opt,name=failed_connections,json=failedConnections,proto3" json:"failed_connections,omitempty"`
	ConnectionStates  []string `protobuf:"bytes,5,rep,name=connection_states,json=connectionStates,proto3" json:"connection_states,omitempty"`
	// Stream information (11-20)
	TotalStreams     int32  `protobuf:"varint,11,opt,name=total_streams,json=totalStreams,proto3" json:"total_streams,omitempty"`
	ControlStreams   int32  `protobuf:"varint,12,opt,name=control_streams,json=controlStreams,proto3" json:"control_streams,omitempty"`
	TunnelStreams    int32  `protobuf:"varint,13,opt,name=tunnel_streams,json=tunnelStreams,proto3" json:"tunnel_streams,omitempty"`
	HealthyStreams   int32  `protobuf:"varint,14,opt,name=healthy_streams,json=healthyStreams,proto3" json:"healthy_streams,omitempty"`
	ActiveStreams    int32  `protobuf:"varint,15,opt,name=active_streams,json=activeStreams,proto3" json:"active_streams,omitempty"`
	StreamAllocation string `protobuf:"bytes,16,opt,name=stream_allocation,json=streamAllocation,proto3" json:"stream_allocation,omitempty"` // allocation strategy
	// Protocol information (21-30)
	ProtocolVersion    string `protobuf:"bytes,21,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	CompressionEnabled bool   `protobuf:"varint,22,opt,name=compression_enabled,json=compressionEnabled,proto3" json:"compression_enabled,omitempty"`
	TlsVersion         string `protobuf:"bytes,23,opt,name=tls_version,json=tlsVersion,proto3" json:"tls_version,omitempty"`
	// Health monitoring (31-40)
	LastHealthCheck       int64    `protobuf:"varint,31,opt,name=last_health_check,json=lastHealthCheck,proto3" json:"last_health_check,omitempty"`                     // epoch milliseconds
	HealthCheckIntervalNs int64    `protobuf:"varint,32,opt,name=health_check_interval_ns,json=healthCheckIntervalNs,proto3" json:"health_check_interval_ns,omitempty"` // nanoseconds
	UnhealthyStreams      []string `protobuf:"bytes,33,rep,name=unhealthy_streams,json=unhealthyStreams,proto3" json:"unhealthy_streams,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GRPCConnectionMetrics) Reset() {
	*x = GRPCConnectionMetrics{}
	mi := &file_gravity_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GRPCConnectionMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GRPCConnectionMetrics) ProtoMessage() {}

func (x *GRPCConnectionMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GRPCConnectionMetrics.ProtoReflect.Descriptor instead.
func (*GRPCConnectionMetrics) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{34}
}

func (x *GRPCConnectionMetrics) GetPoolSize() int32 {
	if x != nil {
		return x.PoolSize
	}
	return 0
}

func (x *GRPCConnectionMetrics) GetActiveConnections() int32 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

func (x *GRPCConnectionMetrics) GetIdleConnections() int32 {
	if x != nil {
		return x.IdleConnections
	}
	return 0
}

func (x *GRPCConnectionMetrics) GetFailedConnections() int32 {
	if x != nil {
		return x.FailedConnections
	}
	return 0
}

func (x *GRPCConnectionMetrics) GetConnectionStates() []string {
	if x != nil {
		return x.ConnectionStates
	}
	return nil
}

func (x *GRPCConnectionMetrics) GetTotalStreams() int32 {
	if x != nil {
		return x.TotalStreams
	}
	return 0
}

func (x *GRPCConnectionMetrics) GetControlStreams() int32 {
	if x != nil {
		return x.ControlStreams
	}
	return 0
}

func (x *GRPCConnectionMetrics) GetTunnelStreams() int32 {
	if x != nil {
		return x.TunnelStreams
	}
	return 0
}

func (x *GRPCConnectionMetrics) GetHealthyStreams() int32 {
	if x != nil {
		return x.HealthyStreams
	}
	return 0
}

func (x *GRPCConnectionMetrics) GetActiveStreams() int32 {
	if x != nil {
		return x.ActiveStreams
	}
	return 0
}

func (x *GRPCConnectionMetrics) GetStreamAllocation() string {
	if x != nil {
		return x.StreamAllocation
	}
	return ""
}

func (x *GRPCConnectionMetrics) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *GRPCConnectionMetrics) GetCompressionEnabled() bool {
	if x != nil {
		return x.CompressionEnabled
	}
	return false
}

func (x *GRPCConnectionMetrics) GetTlsVersion() string {
	if x != nil {
		return x.TlsVersion
	}
	return ""
}

func (x *GRPCConnectionMetrics) GetLastHealthCheck() int64 {
	if x != nil {
		return x.LastHealthCheck
	}
	return 0
}

func (x *GRPCConnectionMetrics) GetHealthCheckIntervalNs() int64 {
	if x != nil {
		return x.HealthCheckIntervalNs
	}
	return 0
}

func (x *GRPCConnectionMetrics) GetUnhealthyStreams() []string {
	if x != nil {
		return x.UnhealthyStreams
	}
	return nil
}

// PerformanceMetrics contains performance data from MetricsCollector
type PerformanceMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Latency metrics (1-10) - all in nanoseconds
	AvgPacketLatencyNs  int64 `protobuf:"varint,1,opt,name=avg_packet_latency_ns,json=avgPacketLatencyNs,proto3" json:"avg_packet_latency_ns,omitempty"`
	P95PacketLatencyNs  int64 `protobuf:"varint,2,opt,name=p95_packet_latency_ns,json=p95PacketLatencyNs,proto3" json:"p95_packet_latency_ns,omitempty"`
	P99PacketLatencyNs  int64 `protobuf:"varint,3,opt,name=p99_packet_latency_ns,json=p99PacketLatencyNs,proto3" json:"p99_packet_latency_ns,omitempty"`
	MaxPacketLatencyNs  int64 `protobuf:"varint,4,opt,name=max_packet_latency_ns,json=maxPacketLatencyNs,proto3" json:"max_packet_latency_ns,omitempty"`
	AvgControlLatencyNs int64 `protobuf:"varint,5,opt,name=avg_control_latency_ns,json=avgControlLatencyNs,proto3" json:"avg_control_latency_ns,omitempty"`
	P95ControlLatencyNs int64 `protobuf:"varint,6,opt,name=p95_control_latency_ns,json=p95ControlLatencyNs,proto3" json:"p95_control_latency_ns,omitempty"`
	// Throughput metrics (11-20)
	PacketsPerSecond      float64 `protobuf:"fixed64,11,opt,name=packets_per_second,json=packetsPerSecond,proto3" json:"packets_per_second,omitempty"`
	BytesPerSecond        float64 `protobuf:"fixed64,12,opt,name=bytes_per_second,json=bytesPerSecond,proto3" json:"bytes_per_second,omitempty"`
	ControlMessagesPerSec float64 `protobuf:"fixed64,13,opt,name=control_messages_per_sec,json=controlMessagesPerSec,proto3" json:"control_messages_per_sec,omitempty"`
	// Error metrics (21-30)
	ErrorRate        float64 `protobuf:"fixed64,21,opt,name=error_rate,json=errorRate,proto3" json:"error_rate,omitempty"` // percentage
	PacketDrops      int64   `protobuf:"varint,22,opt,name=packet_drops,json=packetDrops,proto3" json:"packet_drops,omitempty"`
	StreamErrors     int64   `protobuf:"varint,23,opt,name=stream_errors,json=streamErrors,proto3" json:"stream_errors,omitempty"`
	ConnectionErrors int64   `protobuf:"varint,24,opt,name=connection_errors,json=connectionErrors,proto3" json:"connection_errors,omitempty"`
	// Stream health (31-40)
	HealthyStreams    int64   `protobuf:"varint,31,opt,name=healthy_streams,json=healthyStreams,proto3" json:"healthy_streams,omitempty"`
	TotalStreams      int64   `protobuf:"varint,32,opt,name=total_streams,json=totalStreams,proto3" json:"total_streams,omitempty"`
	ActiveConnections int64   `protobuf:"varint,33,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	UnhealthyStreams  int64   `protobuf:"varint,34,opt,name=unhealthy_streams,json=unhealthyStreams,proto3" json:"unhealthy_streams,omitempty"`
	StreamUtilization float64 `protobuf:"fixed64,35,opt,name=stream_utilization,json=streamUtilization,proto3" json:"stream_utilization,omitempty"` // percentage
	// Circuit breaker metrics (41-50)
	CircuitBreakerStates []string `protobuf:"bytes,41,rep,name=circuit_breaker_states,json=circuitBreakerStates,proto3" json:"circuit_breaker_states,omitempty"`
	TotalCircuitBreaks   int64    `protobuf:"varint,42,opt,name=total_circuit_breaks,json=totalCircuitBreaks,proto3" json:"total_circuit_breaks,omitempty"`
	AvgRecoveryTimeNs    int64    `protobuf:"varint,43,opt,name=avg_recovery_time_ns,json=avgRecoveryTimeNs,proto3" json:"avg_recovery_time_ns,omitempty"`
	// Compression metrics (51-60)
	CompressionRatio    float64 `protobuf:"fixed64,51,opt,name=compression_ratio,json=compressionRatio,proto3" json:"compression_ratio,omitempty"` // percentage
	BytesSaved          int64   `protobuf:"varint,52,opt,name=bytes_saved,json=bytesSaved,proto3" json:"bytes_saved,omitempty"`
	CompressionTimeNs   int64   `protobuf:"varint,53,opt,name=compression_time_ns,json=compressionTimeNs,proto3" json:"compression_time_ns,omitempty"`
	DecompressionTimeNs int64   `protobuf:"varint,54,opt,name=decompression_time_ns,json=decompressionTimeNs,proto3" json:"decompression_time_ns,omitempty"`
	// Retry metrics (61-70)
	TotalRetryAttempts int64   `protobuf:"varint,61,opt,name=total_retry_attempts,json=totalRetryAttempts,proto3" json:"total_retry_attempts,omitempty"`
	SuccessfulRetries  int64   `protobuf:"varint,62,opt,name=successful_retries,json=successfulRetries,proto3" json:"successful_retries,omitempty"`
	FailedRetries      int64   `protobuf:"varint,63,opt,name=failed_retries,json=failedRetries,proto3" json:"failed_retries,omitempty"`
	RetrySuccessRate   float64 `protobuf:"fixed64,64,opt,name=retry_success_rate,json=retrySuccessRate,proto3" json:"retry_success_rate,omitempty"` // percentage
	// Connection pool metrics (71-80)
	PoolUtilization  float64 `protobuf:"fixed64,71,opt,name=pool_utilization,json=poolUtilization,proto3" json:"pool_utilization,omitempty"` // percentage
	IdleConnections  int64   `protobuf:"varint,72,opt,name=idle_connections,json=idleConnections,proto3" json:"idle_connections,omitempty"`
	ConnectionResets int64   `protobuf:"varint,73,opt,name=connection_resets,json=connectionResets,proto3" json:"connection_resets,omitempty"`
	// Resource utilization (81-90)
	MemoryUsageBytes int64 `protobuf:"varint,81,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`
	BufferPoolSize   int64 `protobuf:"varint,82,opt,name=buffer_pool_size,json=bufferPoolSize,proto3" json:"buffer_pool_size,omitempty"`
	BufferPoolHits   int64 `protobuf:"varint,83,opt,name=buffer_pool_hits,json=bufferPoolHits,proto3" json:"buffer_pool_hits,omitempty"`
	BufferPoolMisses int64 `protobuf:"varint,84,opt,name=buffer_pool_misses,json=bufferPoolMisses,proto3" json:"buffer_pool_misses,omitempty"`
	// Metadata and timing (91-100)
	LastUpdated          int64 `protobuf:"varint,91,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`                              // epoch milliseconds
	CollectionIntervalNs int64 `protobuf:"varint,92,opt,name=collection_interval_ns,json=collectionIntervalNs,proto3" json:"collection_interval_ns,omitempty"` // nanoseconds
	// Container metrics (101-110)
	DockerStats   map[string]*DockerContainerStats `protobuf:"bytes,101,rep,name=docker_stats,json=dockerStats,proto3" json:"docker_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PerformanceMetrics) Reset() {
	*x = PerformanceMetrics{}
	mi := &file_gravity_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceMetrics) ProtoMessage() {}

func (x *PerformanceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceMetrics.ProtoReflect.Descriptor instead.
func (*PerformanceMetrics) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{35}
}

func (x *PerformanceMetrics) GetAvgPacketLatencyNs() int64 {
	if x != nil {
		return x.AvgPacketLatencyNs
	}
	return 0
}

func (x *PerformanceMetrics) GetP95PacketLatencyNs() int64 {
	if x != nil {
		return x.P95PacketLatencyNs
	}
	return 0
}

func (x *PerformanceMetrics) GetP99PacketLatencyNs() int64 {
	if x != nil {
		return x.P99PacketLatencyNs
	}
	return 0
}

func (x *PerformanceMetrics) GetMaxPacketLatencyNs() int64 {
	if x != nil {
		return x.MaxPacketLatencyNs
	}
	return 0
}

func (x *PerformanceMetrics) GetAvgControlLatencyNs() int64 {
	if x != nil {
		return x.AvgControlLatencyNs
	}
	return 0
}

func (x *PerformanceMetrics) GetP95ControlLatencyNs() int64 {
	if x != nil {
		return x.P95ControlLatencyNs
	}
	return 0
}

func (x *PerformanceMetrics) GetPacketsPerSecond() float64 {
	if x != nil {
		return x.PacketsPerSecond
	}
	return 0
}

func (x *PerformanceMetrics) GetBytesPerSecond() float64 {
	if x != nil {
		return x.BytesPerSecond
	}
	return 0
}

func (x *PerformanceMetrics) GetControlMessagesPerSec() float64 {
	if x != nil {
		return x.ControlMessagesPerSec
	}
	return 0
}

func (x *PerformanceMetrics) GetErrorRate() float64 {
	if x != nil {
		return x.ErrorRate
	}
	return 0
}

func (x *PerformanceMetrics) GetPacketDrops() int64 {
	if x != nil {
		return x.PacketDrops
	}
	return 0
}

func (x *PerformanceMetrics) GetStreamErrors() int64 {
	if x != nil {
		return x.StreamErrors
	}
	return 0
}

func (x *PerformanceMetrics) GetConnectionErrors() int64 {
	if x != nil {
		return x.ConnectionErrors
	}
	return 0
}

func (x *PerformanceMetrics) GetHealthyStreams() int64 {
	if x != nil {
		return x.HealthyStreams
	}
	return 0
}

func (x *PerformanceMetrics) GetTotalStreams() int64 {
	if x != nil {
		return x.TotalStreams
	}
	return 0
}

func (x *PerformanceMetrics) GetActiveConnections() int64 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

func (x *PerformanceMetrics) GetUnhealthyStreams() int64 {
	if x != nil {
		return x.UnhealthyStreams
	}
	return 0
}

func (x *PerformanceMetrics) GetStreamUtilization() float64 {
	if x != nil {
		return x.StreamUtilization
	}
	return 0
}

func (x *PerformanceMetrics) GetCircuitBreakerStates() []string {
	if x != nil {
		return x.CircuitBreakerStates
	}
	return nil
}

func (x *PerformanceMetrics) GetTotalCircuitBreaks() int64 {
	if x != nil {
		return x.TotalCircuitBreaks
	}
	return 0
}

func (x *PerformanceMetrics) GetAvgRecoveryTimeNs() int64 {
	if x != nil {
		return x.AvgRecoveryTimeNs
	}
	return 0
}

func (x *PerformanceMetrics) GetCompressionRatio() float64 {
	if x != nil {
		return x.CompressionRatio
	}
	return 0
}

func (x *PerformanceMetrics) GetBytesSaved() int64 {
	if x != nil {
		return x.BytesSaved
	}
	return 0
}

func (x *PerformanceMetrics) GetCompressionTimeNs() int64 {
	if x != nil {
		return x.CompressionTimeNs
	}
	return 0
}

func (x *PerformanceMetrics) GetDecompressionTimeNs() int64 {
	if x != nil {
		return x.DecompressionTimeNs
	}
	return 0
}

func (x *PerformanceMetrics) GetTotalRetryAttempts() int64 {
	if x != nil {
		return x.TotalRetryAttempts
	}
	return 0
}

func (x *PerformanceMetrics) GetSuccessfulRetries() int64 {
	if x != nil {
		return x.SuccessfulRetries
	}
	return 0
}

func (x *PerformanceMetrics) GetFailedRetries() int64 {
	if x != nil {
		return x.FailedRetries
	}
	return 0
}

func (x *PerformanceMetrics) GetRetrySuccessRate() float64 {
	if x != nil {
		return x.RetrySuccessRate
	}
	return 0
}

func (x *PerformanceMetrics) GetPoolUtilization() float64 {
	if x != nil {
		return x.PoolUtilization
	}
	return 0
}

func (x *PerformanceMetrics) GetIdleConnections() int64 {
	if x != nil {
		return x.IdleConnections
	}
	return 0
}

func (x *PerformanceMetrics) GetConnectionResets() int64 {
	if x != nil {
		return x.ConnectionResets
	}
	return 0
}

func (x *PerformanceMetrics) GetMemoryUsageBytes() int64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

func (x *PerformanceMetrics) GetBufferPoolSize() int64 {
	if x != nil {
		return x.BufferPoolSize
	}
	return 0
}

func (x *PerformanceMetrics) GetBufferPoolHits() int64 {
	if x != nil {
		return x.BufferPoolHits
	}
	return 0
}

func (x *PerformanceMetrics) GetBufferPoolMisses() int64 {
	if x != nil {
		return x.BufferPoolMisses
	}
	return 0
}

func (x *PerformanceMetrics) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *PerformanceMetrics) GetCollectionIntervalNs() int64 {
	if x != nil {
		return x.CollectionIntervalNs
	}
	return 0
}

func (x *PerformanceMetrics) GetDockerStats() map[string]*DockerContainerStats {
	if x != nil {
		return x.DockerStats
	}
	return nil
}

// MessageStatistics contains detailed message flow statistics
type MessageStatistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Packet statistics (1-10)
	PacketsSent     int64   `protobuf:"varint,1,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	PacketsReceived int64   `protobuf:"varint,2,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	PacketsDropped  int64   `protobuf:"varint,3,opt,name=packets_dropped,json=packetsDropped,proto3" json:"packets_dropped,omitempty"`
	PacketBytes     int64   `protobuf:"varint,4,opt,name=packet_bytes,json=packetBytes,proto3" json:"packet_bytes,omitempty"`
	AvgPacketSize   float64 `protobuf:"fixed64,5,opt,name=avg_packet_size,json=avgPacketSize,proto3" json:"avg_packet_size,omitempty"` // bytes
	// Control message statistics (11-20)
	ControlMessagesSent     int64 `protobuf:"varint,11,opt,name=control_messages_sent,json=controlMessagesSent,proto3" json:"control_messages_sent,omitempty"`
	ControlMessagesReceived int64 `protobuf:"varint,12,opt,name=control_messages_received,json=controlMessagesReceived,proto3" json:"control_messages_received,omitempty"`
	ControlMessageBytes     int64 `protobuf:"varint,13,opt,name=control_message_bytes,json=controlMessageBytes,proto3" json:"control_message_bytes,omitempty"`
	// Message breakdown (21-30)
	MessagesByType map[string]int64 `protobuf:"bytes,21,rep,name=messages_by_type,json=messagesByType,proto3" json:"messages_by_type,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Throughput metrics (31-40)
	PacketsPerSecond float64 `protobuf:"fixed64,31,opt,name=packets_per_second,json=packetsPerSecond,proto3" json:"packets_per_second,omitempty"`
	BytesPerSecond   float64 `protobuf:"fixed64,32,opt,name=bytes_per_second,json=bytesPerSecond,proto3" json:"bytes_per_second,omitempty"`
	// Quality metrics (41-50)
	PacketLossRate      float64 `protobuf:"fixed64,41,opt,name=packet_loss_rate,json=packetLossRate,proto3" json:"packet_loss_rate,omitempty"`                // percentage
	MessageDeliveryRate float64 `protobuf:"fixed64,42,opt,name=message_delivery_rate,json=messageDeliveryRate,proto3" json:"message_delivery_rate,omitempty"` // percentage
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MessageStatistics) Reset() {
	*x = MessageStatistics{}
	mi := &file_gravity_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageStatistics) ProtoMessage() {}

func (x *MessageStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageStatistics.ProtoReflect.Descriptor instead.
func (*MessageStatistics) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{36}
}

func (x *MessageStatistics) GetPacketsSent() int64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *MessageStatistics) GetPacketsReceived() int64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *MessageStatistics) GetPacketsDropped() int64 {
	if x != nil {
		return x.PacketsDropped
	}
	return 0
}

func (x *MessageStatistics) GetPacketBytes() int64 {
	if x != nil {
		return x.PacketBytes
	}
	return 0
}

func (x *MessageStatistics) GetAvgPacketSize() float64 {
	if x != nil {
		return x.AvgPacketSize
	}
	return 0
}

func (x *MessageStatistics) GetControlMessagesSent() int64 {
	if x != nil {
		return x.ControlMessagesSent
	}
	return 0
}

func (x *MessageStatistics) GetControlMessagesReceived() int64 {
	if x != nil {
		return x.ControlMessagesReceived
	}
	return 0
}

func (x *MessageStatistics) GetControlMessageBytes() int64 {
	if x != nil {
		return x.ControlMessageBytes
	}
	return 0
}

func (x *MessageStatistics) GetMessagesByType() map[string]int64 {
	if x != nil {
		return x.MessagesByType
	}
	return nil
}

func (x *MessageStatistics) GetPacketsPerSecond() float64 {
	if x != nil {
		return x.PacketsPerSecond
	}
	return 0
}

func (x *MessageStatistics) GetBytesPerSecond() float64 {
	if x != nil {
		return x.BytesPerSecond
	}
	return 0
}

func (x *MessageStatistics) GetPacketLossRate() float64 {
	if x != nil {
		return x.PacketLossRate
	}
	return 0
}

func (x *MessageStatistics) GetMessageDeliveryRate() float64 {
	if x != nil {
		return x.MessageDeliveryRate
	}
	return 0
}

// SystemResourceMetrics contains system resource utilization
type SystemResourceMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Memory metrics (1-10)
	MemoryUsageBytes int64   `protobuf:"varint,1,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`
	MemoryUsageMb    float64 `protobuf:"fixed64,2,opt,name=memory_usage_mb,json=memoryUsageMb,proto3" json:"memory_usage_mb,omitempty"`
	AllocatedMemory  int64   `protobuf:"varint,3,opt,name=allocated_memory,json=allocatedMemory,proto3" json:"allocated_memory,omitempty"`
	GcPauseTimeNs    int64   `protobuf:"varint,4,opt,name=gc_pause_time_ns,json=gcPauseTimeNs,proto3" json:"gc_pause_time_ns,omitempty"`
	NumGoroutines    int32   `protobuf:"varint,5,opt,name=num_goroutines,json=numGoroutines,proto3" json:"num_goroutines,omitempty"`
	// CPU metrics (11-20)
	CpuUsagePercent float64 `protobuf:"fixed64,11,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	// Buffer pool metrics (21-30)
	BufferPoolSize    int64   `protobuf:"varint,21,opt,name=buffer_pool_size,json=bufferPoolSize,proto3" json:"buffer_pool_size,omitempty"`
	BufferPoolHits    int64   `protobuf:"varint,22,opt,name=buffer_pool_hits,json=bufferPoolHits,proto3" json:"buffer_pool_hits,omitempty"`
	BufferPoolMisses  int64   `protobuf:"varint,23,opt,name=buffer_pool_misses,json=bufferPoolMisses,proto3" json:"buffer_pool_misses,omitempty"`
	BufferPoolHitRate float64 `protobuf:"fixed64,24,opt,name=buffer_pool_hit_rate,json=bufferPoolHitRate,proto3" json:"buffer_pool_hit_rate,omitempty"` // percentage
	// File descriptor metrics (31-40)
	OpenFileDescriptors int32 `protobuf:"varint,31,opt,name=open_file_descriptors,json=openFileDescriptors,proto3" json:"open_file_descriptors,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SystemResourceMetrics) Reset() {
	*x = SystemResourceMetrics{}
	mi := &file_gravity_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemResourceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemResourceMetrics) ProtoMessage() {}

func (x *SystemResourceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemResourceMetrics.ProtoReflect.Descriptor instead.
func (*SystemResourceMetrics) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{37}
}

func (x *SystemResourceMetrics) GetMemoryUsageBytes() int64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

func (x *SystemResourceMetrics) GetMemoryUsageMb() float64 {
	if x != nil {
		return x.MemoryUsageMb
	}
	return 0
}

func (x *SystemResourceMetrics) GetAllocatedMemory() int64 {
	if x != nil {
		return x.AllocatedMemory
	}
	return 0
}

func (x *SystemResourceMetrics) GetGcPauseTimeNs() int64 {
	if x != nil {
		return x.GcPauseTimeNs
	}
	return 0
}

func (x *SystemResourceMetrics) GetNumGoroutines() int32 {
	if x != nil {
		return x.NumGoroutines
	}
	return 0
}

func (x *SystemResourceMetrics) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *SystemResourceMetrics) GetBufferPoolSize() int64 {
	if x != nil {
		return x.BufferPoolSize
	}
	return 0
}

func (x *SystemResourceMetrics) GetBufferPoolHits() int64 {
	if x != nil {
		return x.BufferPoolHits
	}
	return 0
}

func (x *SystemResourceMetrics) GetBufferPoolMisses() int64 {
	if x != nil {
		return x.BufferPoolMisses
	}
	return 0
}

func (x *SystemResourceMetrics) GetBufferPoolHitRate() float64 {
	if x != nil {
		return x.BufferPoolHitRate
	}
	return 0
}

func (x *SystemResourceMetrics) GetOpenFileDescriptors() int32 {
	if x != nil {
		return x.OpenFileDescriptors
	}
	return 0
}

// HistoricalMetrics contains time-series data for trend analysis
type HistoricalMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Recent throughput samples (last 60 samples, 1 per minute)
	ThroughputHistory []*ThroughputSample `protobuf:"bytes,1,rep,name=throughput_history,json=throughputHistory,proto3" json:"throughput_history,omitempty"`
	// Recent latency samples
	LatencyHistory []*LatencySample `protobuf:"bytes,2,rep,name=latency_history,json=latencyHistory,proto3" json:"latency_history,omitempty"`
	// Error rate samples
	ErrorRateHistory []*ErrorRateSample `protobuf:"bytes,3,rep,name=error_rate_history,json=errorRateHistory,proto3" json:"error_rate_history,omitempty"`
	// Connection health samples
	HealthHistory []*HealthSample `protobuf:"bytes,4,rep,name=health_history,json=healthHistory,proto3" json:"health_history,omitempty"`
	// Maximum history length
	MaxHistoryLength int32 `protobuf:"varint,5,opt,name=max_history_length,json=maxHistoryLength,proto3" json:"max_history_length,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HistoricalMetrics) Reset() {
	*x = HistoricalMetrics{}
	mi := &file_gravity_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoricalMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalMetrics) ProtoMessage() {}

func (x *HistoricalMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricalMetrics.ProtoReflect.Descriptor instead.
func (*HistoricalMetrics) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{38}
}

func (x *HistoricalMetrics) GetThroughputHistory() []*ThroughputSample {
	if x != nil {
		return x.ThroughputHistory
	}
	return nil
}

func (x *HistoricalMetrics) GetLatencyHistory() []*LatencySample {
	if x != nil {
		return x.LatencyHistory
	}
	return nil
}

func (x *HistoricalMetrics) GetErrorRateHistory() []*ErrorRateSample {
	if x != nil {
		return x.ErrorRateHistory
	}
	return nil
}

func (x *HistoricalMetrics) GetHealthHistory() []*HealthSample {
	if x != nil {
		return x.HealthHistory
	}
	return nil
}

func (x *HistoricalMetrics) GetMaxHistoryLength() int32 {
	if x != nil {
		return x.MaxHistoryLength
	}
	return 0
}

// ThroughputSample represents a throughput measurement at a point in time
type ThroughputSample struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Timestamp      int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // epoch milliseconds
	PacketsPerSec  float64                `protobuf:"fixed64,2,opt,name=packets_per_sec,json=packetsPerSec,proto3" json:"packets_per_sec,omitempty"`
	BytesPerSec    float64                `protobuf:"fixed64,3,opt,name=bytes_per_sec,json=bytesPerSec,proto3" json:"bytes_per_sec,omitempty"`
	MessagesPerSec float64                `protobuf:"fixed64,4,opt,name=messages_per_sec,json=messagesPerSec,proto3" json:"messages_per_sec,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ThroughputSample) Reset() {
	*x = ThroughputSample{}
	mi := &file_gravity_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThroughputSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThroughputSample) ProtoMessage() {}

func (x *ThroughputSample) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThroughputSample.ProtoReflect.Descriptor instead.
func (*ThroughputSample) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{39}
}

func (x *ThroughputSample) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ThroughputSample) GetPacketsPerSec() float64 {
	if x != nil {
		return x.PacketsPerSec
	}
	return 0
}

func (x *ThroughputSample) GetBytesPerSec() float64 {
	if x != nil {
		return x.BytesPerSec
	}
	return 0
}

func (x *ThroughputSample) GetMessagesPerSec() float64 {
	if x != nil {
		return x.MessagesPerSec
	}
	return 0
}

// LatencySample represents latency measurements at a point in time
type LatencySample struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // epoch milliseconds
	AvgLatencyNs  int64                  `protobuf:"varint,2,opt,name=avg_latency_ns,json=avgLatencyNs,proto3" json:"avg_latency_ns,omitempty"`
	P95LatencyNs  int64                  `protobuf:"varint,3,opt,name=p95_latency_ns,json=p95LatencyNs,proto3" json:"p95_latency_ns,omitempty"`
	P99LatencyNs  int64                  `protobuf:"varint,4,opt,name=p99_latency_ns,json=p99LatencyNs,proto3" json:"p99_latency_ns,omitempty"`
	MaxLatencyNs  int64                  `protobuf:"varint,5,opt,name=max_latency_ns,json=maxLatencyNs,proto3" json:"max_latency_ns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatencySample) Reset() {
	*x = LatencySample{}
	mi := &file_gravity_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatencySample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencySample) ProtoMessage() {}

func (x *LatencySample) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatencySample.ProtoReflect.Descriptor instead.
func (*LatencySample) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{40}
}

func (x *LatencySample) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LatencySample) GetAvgLatencyNs() int64 {
	if x != nil {
		return x.AvgLatencyNs
	}
	return 0
}

func (x *LatencySample) GetP95LatencyNs() int64 {
	if x != nil {
		return x.P95LatencyNs
	}
	return 0
}

func (x *LatencySample) GetP99LatencyNs() int64 {
	if x != nil {
		return x.P99LatencyNs
	}
	return 0
}

func (x *LatencySample) GetMaxLatencyNs() int64 {
	if x != nil {
		return x.MaxLatencyNs
	}
	return 0
}

// ErrorRateSample represents error rate at a point in time
type ErrorRateSample struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                   // epoch milliseconds
	ErrorRate     float64                `protobuf:"fixed64,2,opt,name=error_rate,json=errorRate,proto3" json:"error_rate,omitempty"` // percentage
	TotalErrors   int64                  `protobuf:"varint,3,opt,name=total_errors,json=totalErrors,proto3" json:"total_errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorRateSample) Reset() {
	*x = ErrorRateSample{}
	mi := &file_gravity_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorRateSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorRateSample) ProtoMessage() {}

func (x *ErrorRateSample) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorRateSample.ProtoReflect.Descriptor instead.
func (*ErrorRateSample) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{41}
}

func (x *ErrorRateSample) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ErrorRateSample) GetErrorRate() float64 {
	if x != nil {
		return x.ErrorRate
	}
	return 0
}

func (x *ErrorRateSample) GetTotalErrors() int64 {
	if x != nil {
		return x.TotalErrors
	}
	return 0
}

// HealthSample represents system health at a point in time
type HealthSample struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Timestamp         int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // epoch milliseconds
	HealthyStreams    int32                  `protobuf:"varint,2,opt,name=healthy_streams,json=healthyStreams,proto3" json:"healthy_streams,omitempty"`
	TotalStreams      int32                  `protobuf:"varint,3,opt,name=total_streams,json=totalStreams,proto3" json:"total_streams,omitempty"`
	ActiveConnections int32                  `protobuf:"varint,4,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	HealthScore       float64                `protobuf:"fixed64,5,opt,name=health_score,json=healthScore,proto3" json:"health_score,omitempty"` // percentage
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *HealthSample) Reset() {
	*x = HealthSample{}
	mi := &file_gravity_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthSample) ProtoMessage() {}

func (x *HealthSample) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthSample.ProtoReflect.Descriptor instead.
func (*HealthSample) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{42}
}

func (x *HealthSample) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HealthSample) GetHealthyStreams() int32 {
	if x != nil {
		return x.HealthyStreams
	}
	return 0
}

func (x *HealthSample) GetTotalStreams() int32 {
	if x != nil {
		return x.TotalStreams
	}
	return 0
}

func (x *HealthSample) GetActiveConnections() int32 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

func (x *HealthSample) GetHealthScore() float64 {
	if x != nil {
		return x.HealthScore
	}
	return 0
}

// DockerContainerStats contains real-time Docker container statistics
type DockerContainerStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container identity (1-10)
	ContainerId   string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ContainerName string `protobuf:"bytes,2,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	Image         string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	DeploymentId  string `protobuf:"bytes,4,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// Container state (11-20)
	Status       string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	Paused       bool   `protobuf:"varint,12,opt,name=paused,proto3" json:"paused,omitempty"`
	PausedTime   int64  `protobuf:"varint,13,opt,name=paused_time,json=pausedTime,proto3" json:"paused_time,omitempty"`    // epoch milliseconds, 0 if not paused
	StartedTime  int64  `protobuf:"varint,14,opt,name=started_time,json=startedTime,proto3" json:"started_time,omitempty"` // epoch milliseconds
	RestartCount int64  `protobuf:"varint,15,opt,name=restart_count,json=restartCount,proto3" json:"restart_count,omitempty"`
	// CPU metrics (21-30)
	CpuUsagePercent     float64 `protobuf:"fixed64,21,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	CpuUsageTotalNs     uint64  `protobuf:"varint,22,opt,name=cpu_usage_total_ns,json=cpuUsageTotalNs,proto3" json:"cpu_usage_total_ns,omitempty"`
	CpuUsageKernelNs    uint64  `protobuf:"varint,23,opt,name=cpu_usage_kernel_ns,json=cpuUsageKernelNs,proto3" json:"cpu_usage_kernel_ns,omitempty"`
	CpuUsageUserNs      uint64  `protobuf:"varint,24,opt,name=cpu_usage_user_ns,json=cpuUsageUserNs,proto3" json:"cpu_usage_user_ns,omitempty"`
	CpuThrottledPeriods uint64  `protobuf:"varint,25,opt,name=cpu_throttled_periods,json=cpuThrottledPeriods,proto3" json:"cpu_throttled_periods,omitempty"`
	CpuThrottledTimeNs  uint64  `protobuf:"varint,26,opt,name=cpu_throttled_time_ns,json=cpuThrottledTimeNs,proto3" json:"cpu_throttled_time_ns,omitempty"`
	CpuLimit            float64 `protobuf:"fixed64,27,opt,name=cpu_limit,json=cpuLimit,proto3" json:"cpu_limit,omitempty"`
	// Memory metrics (31-40)
	MemoryUsageBytes     uint64  `protobuf:"varint,31,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`
	MemoryLimitBytes     uint64  `protobuf:"varint,32,opt,name=memory_limit_bytes,json=memoryLimitBytes,proto3" json:"memory_limit_bytes,omitempty"`
	MemoryUsagePercent   float64 `protobuf:"fixed64,33,opt,name=memory_usage_percent,json=memoryUsagePercent,proto3" json:"memory_usage_percent,omitempty"`
	MemoryMaxUsageBytes  uint64  `protobuf:"varint,34,opt,name=memory_max_usage_bytes,json=memoryMaxUsageBytes,proto3" json:"memory_max_usage_bytes,omitempty"`
	MemoryCacheBytes     uint64  `protobuf:"varint,35,opt,name=memory_cache_bytes,json=memoryCacheBytes,proto3" json:"memory_cache_bytes,omitempty"`
	MemoryRssBytes       uint64  `protobuf:"varint,36,opt,name=memory_rss_bytes,json=memoryRssBytes,proto3" json:"memory_rss_bytes,omitempty"`
	MemorySwapBytes      uint64  `protobuf:"varint,37,opt,name=memory_swap_bytes,json=memorySwapBytes,proto3" json:"memory_swap_bytes,omitempty"`
	MemorySwapLimitBytes uint64  `protobuf:"varint,38,opt,name=memory_swap_limit_bytes,json=memorySwapLimitBytes,proto3" json:"memory_swap_limit_bytes,omitempty"`
	OomKills             uint64  `protobuf:"varint,39,opt,name=oom_kills,json=oomKills,proto3" json:"oom_kills,omitempty"`
	// Network metrics (41-50)
	NetworkRxBytes   uint64 `protobuf:"varint,41,opt,name=network_rx_bytes,json=networkRxBytes,proto3" json:"network_rx_bytes,omitempty"`
	NetworkTxBytes   uint64 `protobuf:"varint,42,opt,name=network_tx_bytes,json=networkTxBytes,proto3" json:"network_tx_bytes,omitempty"`
	NetworkRxPackets uint64 `protobuf:"varint,43,opt,name=network_rx_packets,json=networkRxPackets,proto3" json:"network_rx_packets,omitempty"`
	NetworkTxPackets uint64 `protobuf:"varint,44,opt,name=network_tx_packets,json=networkTxPackets,proto3" json:"network_tx_packets,omitempty"`
	NetworkRxErrors  uint64 `protobuf:"varint,45,opt,name=network_rx_errors,json=networkRxErrors,proto3" json:"network_rx_errors,omitempty"`
	NetworkTxErrors  uint64 `protobuf:"varint,46,opt,name=network_tx_errors,json=networkTxErrors,proto3" json:"network_tx_errors,omitempty"`
	NetworkRxDropped uint64 `protobuf:"varint,47,opt,name=network_rx_dropped,json=networkRxDropped,proto3" json:"network_rx_dropped,omitempty"`
	NetworkTxDropped uint64 `protobuf:"varint,48,opt,name=network_tx_dropped,json=networkTxDropped,proto3" json:"network_tx_dropped,omitempty"`
	// Disk I/O metrics (51-60)
	BlockIoReadBytes  uint64 `protobuf:"varint,51,opt,name=block_io_read_bytes,json=blockIoReadBytes,proto3" json:"block_io_read_bytes,omitempty"`
	BlockIoWriteBytes uint64 `protobuf:"varint,52,opt,name=block_io_write_bytes,json=blockIoWriteBytes,proto3" json:"block_io_write_bytes,omitempty"`
	BlockIoReadOps    uint64 `protobuf:"varint,53,opt,name=block_io_read_ops,json=blockIoReadOps,proto3" json:"block_io_read_ops,omitempty"`
	BlockIoWriteOps   uint64 `protobuf:"varint,54,opt,name=block_io_write_ops,json=blockIoWriteOps,proto3" json:"block_io_write_ops,omitempty"`
	// Process metrics (61-70)
	PidsCurrent uint64 `protobuf:"varint,61,opt,name=pids_current,json=pidsCurrent,proto3" json:"pids_current,omitempty"`
	PidsLimit   uint64 `protobuf:"varint,62,opt,name=pids_limit,json=pidsLimit,proto3" json:"pids_limit,omitempty"`
	// Network interface information (71-80)
	Ipv4Address string `protobuf:"bytes,71,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address string `protobuf:"bytes,72,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	Hostname    string `protobuf:"bytes,73,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// Runtime metrics (81-90)
	InflightRequests int64 `protobuf:"varint,81,opt,name=inflight_requests,json=inflightRequests,proto3" json:"inflight_requests,omitempty"`
	// Health and timing (91-100)
	Healthy       bool  `protobuf:"varint,91,opt,name=healthy,proto3" json:"healthy,omitempty"`
	LastUpdated   int64 `protobuf:"varint,92,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"` // epoch milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerContainerStats) Reset() {
	*x = DockerContainerStats{}
	mi := &file_gravity_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerContainerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerContainerStats) ProtoMessage() {}

func (x *DockerContainerStats) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerContainerStats.ProtoReflect.Descriptor instead.
func (*DockerContainerStats) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{43}
}

func (x *DockerContainerStats) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *DockerContainerStats) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *DockerContainerStats) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *DockerContainerStats) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DockerContainerStats) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DockerContainerStats) GetPaused() bool {
	if x != nil {
		return x.Paused
	}
	return false
}

func (x *DockerContainerStats) GetPausedTime() int64 {
	if x != nil {
		return x.PausedTime
	}
	return 0
}

func (x *DockerContainerStats) GetStartedTime() int64 {
	if x != nil {
		return x.StartedTime
	}
	return 0
}

func (x *DockerContainerStats) GetRestartCount() int64 {
	if x != nil {
		return x.RestartCount
	}
	return 0
}

func (x *DockerContainerStats) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *DockerContainerStats) GetCpuUsageTotalNs() uint64 {
	if x != nil {
		return x.CpuUsageTotalNs
	}
	return 0
}

func (x *DockerContainerStats) GetCpuUsageKernelNs() uint64 {
	if x != nil {
		return x.CpuUsageKernelNs
	}
	return 0
}

func (x *DockerContainerStats) GetCpuUsageUserNs() uint64 {
	if x != nil {
		return x.CpuUsageUserNs
	}
	return 0
}

func (x *DockerContainerStats) GetCpuThrottledPeriods() uint64 {
	if x != nil {
		return x.CpuThrottledPeriods
	}
	return 0
}

func (x *DockerContainerStats) GetCpuThrottledTimeNs() uint64 {
	if x != nil {
		return x.CpuThrottledTimeNs
	}
	return 0
}

func (x *DockerContainerStats) GetCpuLimit() float64 {
	if x != nil {
		return x.CpuLimit
	}
	return 0
}

func (x *DockerContainerStats) GetMemoryUsageBytes() uint64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

func (x *DockerContainerStats) GetMemoryLimitBytes() uint64 {
	if x != nil {
		return x.MemoryLimitBytes
	}
	return 0
}

func (x *DockerContainerStats) GetMemoryUsagePercent() float64 {
	if x != nil {
		return x.MemoryUsagePercent
	}
	return 0
}

func (x *DockerContainerStats) GetMemoryMaxUsageBytes() uint64 {
	if x != nil {
		return x.MemoryMaxUsageBytes
	}
	return 0
}

func (x *DockerContainerStats) GetMemoryCacheBytes() uint64 {
	if x != nil {
		return x.MemoryCacheBytes
	}
	return 0
}

func (x *DockerContainerStats) GetMemoryRssBytes() uint64 {
	if x != nil {
		return x.MemoryRssBytes
	}
	return 0
}

func (x *DockerContainerStats) GetMemorySwapBytes() uint64 {
	if x != nil {
		return x.MemorySwapBytes
	}
	return 0
}

func (x *DockerContainerStats) GetMemorySwapLimitBytes() uint64 {
	if x != nil {
		return x.MemorySwapLimitBytes
	}
	return 0
}

func (x *DockerContainerStats) GetOomKills() uint64 {
	if x != nil {
		return x.OomKills
	}
	return 0
}

func (x *DockerContainerStats) GetNetworkRxBytes() uint64 {
	if x != nil {
		return x.NetworkRxBytes
	}
	return 0
}

func (x *DockerContainerStats) GetNetworkTxBytes() uint64 {
	if x != nil {
		return x.NetworkTxBytes
	}
	return 0
}

func (x *DockerContainerStats) GetNetworkRxPackets() uint64 {
	if x != nil {
		return x.NetworkRxPackets
	}
	return 0
}

func (x *DockerContainerStats) GetNetworkTxPackets() uint64 {
	if x != nil {
		return x.NetworkTxPackets
	}
	return 0
}

func (x *DockerContainerStats) GetNetworkRxErrors() uint64 {
	if x != nil {
		return x.NetworkRxErrors
	}
	return 0
}

func (x *DockerContainerStats) GetNetworkTxErrors() uint64 {
	if x != nil {
		return x.NetworkTxErrors
	}
	return 0
}

func (x *DockerContainerStats) GetNetworkRxDropped() uint64 {
	if x != nil {
		return x.NetworkRxDropped
	}
	return 0
}

func (x *DockerContainerStats) GetNetworkTxDropped() uint64 {
	if x != nil {
		return x.NetworkTxDropped
	}
	return 0
}

func (x *DockerContainerStats) GetBlockIoReadBytes() uint64 {
	if x != nil {
		return x.BlockIoReadBytes
	}
	return 0
}

func (x *DockerContainerStats) GetBlockIoWriteBytes() uint64 {
	if x != nil {
		return x.BlockIoWriteBytes
	}
	return 0
}

func (x *DockerContainerStats) GetBlockIoReadOps() uint64 {
	if x != nil {
		return x.BlockIoReadOps
	}
	return 0
}

func (x *DockerContainerStats) GetBlockIoWriteOps() uint64 {
	if x != nil {
		return x.BlockIoWriteOps
	}
	return 0
}

func (x *DockerContainerStats) GetPidsCurrent() uint64 {
	if x != nil {
		return x.PidsCurrent
	}
	return 0
}

func (x *DockerContainerStats) GetPidsLimit() uint64 {
	if x != nil {
		return x.PidsLimit
	}
	return 0
}

func (x *DockerContainerStats) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *DockerContainerStats) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

func (x *DockerContainerStats) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *DockerContainerStats) GetInflightRequests() int64 {
	if x != nil {
		return x.InflightRequests
	}
	return 0
}

func (x *DockerContainerStats) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *DockerContainerStats) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

type ConfigItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`     // Configuration key name
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Configuration value
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigItem) Reset() {
	*x = ConfigItem{}
	mi := &file_gravity_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigItem) ProtoMessage() {}

func (x *ConfigItem) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigItem.ProtoReflect.Descriptor instead.
func (*ConfigItem) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{44}
}

func (x *ConfigItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Deployment metadata request
type DeploymentMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"` // Unique identifier for the deployment
	OrgId         string                 `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`                      // Organization identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeploymentMetadataRequest) Reset() {
	*x = DeploymentMetadataRequest{}
	mi := &file_gravity_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentMetadataRequest) ProtoMessage() {}

func (x *DeploymentMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentMetadataRequest.ProtoReflect.Descriptor instead.
func (*DeploymentMetadataRequest) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{45}
}

func (x *DeploymentMetadataRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DeploymentMetadataRequest) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

// Deployment metadata response
type DeploymentMetadataResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                    // Whether the request was successful
	Error          string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`                                         // Error message if request failed
	CodeMetadata   *CodeMetadata          `protobuf:"bytes,3,opt,name=code_metadata,json=codeMetadata,proto3" json:"code_metadata,omitempty"`       // Code metadata from FetchEnv
	DeploymentCert *DeploymentCert        `protobuf:"bytes,4,opt,name=deployment_cert,json=deploymentCert,proto3" json:"deployment_cert,omitempty"` // Generated deployment certificate
	OtlpToken      string                 `protobuf:"bytes,5,opt,name=otlp_token,json=otlpToken,proto3" json:"otlp_token,omitempty"`                // OpenTelemetry token for metrics
	AuthToken      string                 `protobuf:"bytes,6,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`                // Authentication token
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeploymentMetadataResponse) Reset() {
	*x = DeploymentMetadataResponse{}
	mi := &file_gravity_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentMetadataResponse) ProtoMessage() {}

func (x *DeploymentMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gravity_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentMetadataResponse.ProtoReflect.Descriptor instead.
func (*DeploymentMetadataResponse) Descriptor() ([]byte, []int) {
	return file_gravity_proto_rawDescGZIP(), []int{46}
}

func (x *DeploymentMetadataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeploymentMetadataResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeploymentMetadataResponse) GetCodeMetadata() *CodeMetadata {
	if x != nil {
		return x.CodeMetadata
	}
	return nil
}

func (x *DeploymentMetadataResponse) GetDeploymentCert() *DeploymentCert {
	if x != nil {
		return x.DeploymentCert
	}
	return nil
}

func (x *DeploymentMetadataResponse) GetOtlpToken() string {
	if x != nil {
		return x.OtlpToken
	}
	return ""
}

func (x *DeploymentMetadataResponse) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

var File_gravity_proto protoreflect.FileDescriptor

const file_gravity_proto_rawDesc = "" +
	"\n" +
	"\rgravity.proto\x12\agravity\x1a\x1fgoogle/protobuf/timestamp.proto\"\xbc\x02\n" +
	"\x17ProvisionMachineRequest\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x12+\n" +
	"\x11availability_zone\x18\x02 \x01(\tR\x10availabilityZone\x12\x1a\n" +
	"\bprovider\x18\x03 \x01(\tR\bprovider\x12\x1f\n" +
	"\vinstance_id\x18\x04 \x01(\tR\n" +
	"instanceId\x12!\n" +
	"\fprivate_ipv4\x18\x05 \x01(\tR\vprivateIpv4\x12\x1d\n" +
	"\n" +
	"public_key\x18\x06 \x01(\tR\tpublicKey\x12\x1a\n" +
	"\bhostname\x18\a \x01(\tR\bhostname\x12#\n" +
	"\rerror_message\x18\b \x01(\tR\ferrorMessage\x12\x1c\n" +
	"\tephemeral\x18\t \x01(\bR\tephemeral\"\xcb\x02\n" +
	"\x18ProvisionMachineResponse\x12%\n" +
	"\x0eca_certificate\x18\x01 \x01(\fR\rcaCertificate\x12 \n" +
	"\vcertificate\x18\x02 \x01(\fR\vcertificate\x12\x1f\n" +
	"\vprivate_key\x18\x03 \x01(\fR\n" +
	"privateKey\x124\n" +
	"\aexpires\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\x12#\n" +
	"\rmachine_token\x18\x05 \x01(\tR\fmachineToken\x12\x15\n" +
	"\x06org_id\x18\x06 \x01(\tR\x05orgId\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\a \x01(\tR\tclusterId\x124\n" +
	"\x16deployment_private_key\x18\b \x01(\fR\x14deploymentPrivateKey\"\x97\b\n" +
	"\x0eControlMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tstream_id\x18\x02 \x01(\tR\bstreamId\x123\n" +
	"\aconnect\x18\n" +
	" \x01(\v2\x17.gravity.ConnectRequestH\x00R\aconnect\x12E\n" +
	"\x10connect_response\x18\v \x01(\v2\x18.gravity.ConnectResponseH\x00R\x0fconnectResponse\x12-\n" +
	"\x05close\x18\x0f \x01(\v2\x15.gravity.CloseRequestH\x00R\x05close\x12L\n" +
	"\x10route_deployment\x18\x16 \x01(\v2\x1f.gravity.RouteDeploymentRequestH\x00R\x0frouteDeployment\x12^\n" +
	"\x19route_deployment_response\x18\x17 \x01(\v2 .gravity.RouteDeploymentResponseH\x00R\x17routeDeploymentResponse\x12?\n" +
	"\vunprovision\x18\x19 \x01(\v2\x1b.gravity.UnprovisionRequestH\x00R\vunprovision\x12*\n" +
	"\x04ping\x18\x1e \x01(\v2\x14.gravity.PingRequestH\x00R\x04ping\x12+\n" +
	"\x04pong\x18\x1f \x01(\v2\x15.gravity.PongResponseH\x00R\x04pong\x120\n" +
	"\x06report\x18  \x01(\v2\x16.gravity.ReportRequestH\x00R\x06report\x126\n" +
	"\bactivity\x18! \x01(\v2\x18.gravity.ActivityRequestH\x00R\bactivity\x12-\n" +
	"\x05pause\x18( \x01(\v2\x15.gravity.PauseRequestH\x00R\x05pause\x120\n" +
	"\x06resume\x18) \x01(\v2\x16.gravity.ResumeRequestH\x00R\x06resume\x12C\n" +
	"\rconfig_update\x18- \x01(\v2\x1c.gravity.ConfigurationUpdateH\x00R\fconfigUpdate\x12\\\n" +
	"\x16config_update_response\x18. \x01(\v2$.gravity.ConfigurationUpdateResponseH\x00R\x14configUpdateResponse\x127\n" +
	"\bresponse\x182 \x01(\v2\x19.gravity.ProtocolResponseH\x00R\bresponse\x12.\n" +
	"\x05event\x183 \x01(\v2\x16.gravity.ProtocolEventH\x00R\x05eventB\x0e\n" +
	"\fmessage_type\"?\n" +
	"\fTunnelPacket\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1b\n" +
	"\tstream_id\x18\x02 \x01(\tR\bstreamId\"\x82\x01\n" +
	"\x12ClientCapabilities\x123\n" +
	"\x15provision_deployments\x18\x01 \x01(\bR\x14provisionDeployments\x127\n" +
	"\x17unprovision_deployments\x18\x02 \x01(\bR\x16unprovisionDeployments\"\xb3\x02\n" +
	"\x0eConnectRequest\x12)\n" +
	"\x10protocol_version\x18\x01 \x01(\x05R\x0fprotocolVersion\x12%\n" +
	"\x0eclient_version\x18\x02 \x01(\tR\rclientVersion\x12\x1f\n" +
	"\vclient_name\x18\x03 \x01(\tR\n" +
	"clientName\x12?\n" +
	"\fcapabilities\x18\x04 \x01(\v2\x1b.gravity.ClientCapabilitiesR\fcapabilities\x12=\n" +
	"\vdeployments\x18\x05 \x03(\v2\x1b.gravity.ExistingDeploymentR\vdeployments\x12.\n" +
	"\thost_info\x18\x06 \x01(\v2\x11.gravity.HostInfoR\bhostInfo\"\xec\x01\n" +
	"\x0fConnectResponse\x12\x19\n" +
	"\botlp_url\x18\x01 \x01(\tR\aotlpUrl\x12\x17\n" +
	"\aapi_url\x18\x03 \x01(\tR\x06apiUrl\x12 \n" +
	"\venvironment\x18\x04 \x03(\tR\venvironment\x127\n" +
	"\fhost_mapping\x18\x05 \x03(\v2\x14.gravity.HostMappingR\vhostMapping\x12#\n" +
	"\rsubnet_routes\x18\x06 \x03(\tR\fsubnetRoutes\x12%\n" +
	"\x0egravity_server\x18\a \x01(\tR\rgravityServer\"x\n" +
	"\x16RouteDeploymentRequest\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x1d\n" +
	"\n" +
	"virtual_ip\x18\x03 \x01(\tR\tvirtualIp\")\n" +
	"\x17RouteDeploymentResponse\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\"9\n" +
	"\x12UnprovisionRequest\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\"A\n" +
	"\rReportRequest\x120\n" +
	"\ametrics\x18\x01 \x01(\v2\x16.gravity.ServerMetricsR\ametrics\"=\n" +
	"\x0fActivityRequest\x12*\n" +
	"\x06events\x18\x01 \x03(\v2\x12.gravity.HTTPEventR\x06events\"G\n" +
	"\vPingRequest\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"H\n" +
	"\fPongResponse\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"&\n" +
	"\fCloseRequest\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\"&\n" +
	"\fPauseRequest\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\"'\n" +
	"\rResumeRequest\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\"\x82\x01\n" +
	"\x10ProtocolResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05event\x18\x02 \x01(\tR\x05event\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\x12\x18\n" +
	"\apayload\x18\x05 \x01(\fR\apayload\"O\n" +
	"\rProtocolEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05event\x18\x02 \x01(\tR\x05event\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\"R\n" +
	"\x13ConfigurationUpdate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12+\n" +
	"\x06config\x18\x02 \x03(\v2\x13.gravity.ConfigItemR\x06config\"]\n" +
	"\x1bConfigurationUpdateResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\xe5\x01\n" +
	"\bHostInfo\x12\x18\n" +
	"\astarted\x18\x01 \x01(\x04R\astarted\x12\x10\n" +
	"\x03cpu\x18\x02 \x01(\rR\x03cpu\x12\x16\n" +
	"\x06memory\x18\x03 \x01(\x04R\x06memory\x12\x12\n" +
	"\x04disk\x18\x04 \x01(\x04R\x04disk\x12!\n" +
	"\fipv4_address\x18\x05 \x01(\tR\vipv4Address\x12!\n" +
	"\fipv6_address\x18\x06 \x01(\tR\vipv6Address\x12\x1a\n" +
	"\bhostname\x18\a \x01(\tR\bhostname\x12\x1f\n" +
	"\vinstance_id\x18\b \x01(\tR\n" +
	"instanceId\"\xaa\x01\n" +
	"\x12ExistingDeployment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12+\n" +
	"\x04spec\x18\x02 \x01(\v2\x17.gravity.DeploymentSpecR\x04spec\x124\n" +
	"\astarted\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\astarted\x12!\n" +
	"\fipv6_address\x18\x04 \x01(\tR\vipv6Address\"\xa6\x02\n" +
	"\x0eDeploymentSpec\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x15\n" +
	"\x06org_id\x18\x02 \x01(\tR\x05orgId\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12\x10\n" +
	"\x03env\x18\x04 \x03(\tR\x03env\x12\x18\n" +
	"\asecrets\x18\x05 \x03(\tR\asecrets\x12;\n" +
	"\tresources\x18\x06 \x01(\v2\x1d.gravity.ResourceRequirementsR\tresources\x12D\n" +
	"\x11organization_cert\x18\a \x01(\v2\x17.gravity.DeploymentCertR\x10organizationCert\x12(\n" +
	"\x10skip_private_key\x18\b \x01(\bR\x0eskipPrivateKey\"m\n" +
	"\vPortMapping\x12%\n" +
	"\x0econtainer_port\x18\x01 \x01(\x05R\rcontainerPort\x12\x1b\n" +
	"\thost_port\x18\x02 \x01(\x05R\bhostPort\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\"n\n" +
	"\vVolumeMount\x12\x1b\n" +
	"\thost_path\x18\x01 \x01(\tR\bhostPath\x12%\n" +
	"\x0econtainer_path\x18\x02 \x01(\tR\rcontainerPath\x12\x1b\n" +
	"\tread_only\x18\x03 \x01(\bR\breadOnly\"\x9e\x01\n" +
	"\x14ResourceRequirements\x12!\n" +
	"\fmemory_limit\x18\x01 \x01(\x03R\vmemoryLimit\x12\x1b\n" +
	"\tcpu_limit\x18\x02 \x01(\x03R\bcpuLimit\x12%\n" +
	"\x0ememory_request\x18\x03 \x01(\x03R\rmemoryRequest\x12\x1f\n" +
	"\vcpu_request\x18\x04 \x01(\x03R\n" +
	"cpuRequest\"`\n" +
	"\x0eDeploymentCert\x12\x12\n" +
	"\x04cert\x18\x01 \x01(\tR\x04cert\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x0e\n" +
	"\x02ca\x18\x03 \x01(\tR\x02ca\x12\x18\n" +
	"\adnsname\x18\x04 \x01(\tR\adnsname\":\n" +
	"\fCodeMetadata\x12\x10\n" +
	"\x03env\x18\x01 \x03(\tR\x03env\x12\x18\n" +
	"\asecrets\x18\x02 \x03(\tR\asecrets\"\xb7\x01\n" +
	"\bResource\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12!\n" +
	"\fipv6_address\x18\x03 \x01(\tR\vipv6Address\x12*\n" +
	"\x05ports\x18\x04 \x03(\v2\x14.gravity.PortMappingR\x05ports\x124\n" +
	"\acreated\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\"H\n" +
	"\vHostMapping\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\"\x98\x03\n" +
	"\tHTTPEvent\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x16\n" +
	"\x06status\x18\x03 \x01(\x05R\x06status\x12\x18\n" +
	"\astarted\x18\x04 \x01(\x03R\astarted\x12\x1a\n" +
	"\bduration\x18\x05 \x01(\x03R\bduration\x12#\n" +
	"\rdeployment_id\x18\x06 \x01(\tR\fdeploymentId\x12\x1d\n" +
	"\n" +
	"session_id\x18\a \x01(\tR\tsessionId\x12\x19\n" +
	"\bagent_id\x18\b \x01(\tR\aagentId\x12\x1d\n" +
	"\n" +
	"machine_id\x18\t \x01(\tR\tmachineId\x12\x1d\n" +
	"\n" +
	"project_id\x18\n" +
	" \x01(\tR\tprojectId\x12\x15\n" +
	"\x06org_id\x18\v \x01(\tR\x05orgId\x12\x1b\n" +
	"\tcpu_units\x18\f \x01(\x03R\bcpuUnits\x12!\n" +
	"\fmemory_units\x18\r \x01(\x03R\vmemoryUnits\x12\x1d\n" +
	"\n" +
	"disk_units\x18\x0e \x01(\x03R\tdiskUnits\"\xbe\x01\n" +
	"\vSessionInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"machine_id\x18\x02 \x01(\tR\tmachineId\x128\n" +
	"\tconnected\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tconnected\x12$\n" +
	"\rauthenticated\x18\x04 \x01(\bR\rauthenticated\x12 \n" +
	"\vdeployments\x18\x05 \x03(\tR\vdeployments\"\xe1\x04\n" +
	"\rServerMetrics\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x03R\tstartTime\x12\x16\n" +
	"\x06uptime\x18\x02 \x01(\x04R\x06uptime\x12%\n" +
	"\x0econnected_time\x18\x03 \x01(\x03R\rconnectedTime\x12*\n" +
	"\x11last_message_time\x18\x04 \x01(\x03R\x0flastMessageTime\x12!\n" +
	"\fis_connected\x18\v \x01(\bR\visConnected\x12'\n" +
	"\x0freconnect_count\x18\f \x01(\x03R\x0ereconnectCount\x12+\n" +
	"\x11total_connections\x18\r \x01(\x03R\x10totalConnections\x12A\n" +
	"\fgrpc_metrics\x18\x15 \x01(\v2\x1e.gravity.GRPCConnectionMetricsR\vgrpcMetrics\x12=\n" +
	"\vperformance\x18\x16 \x01(\v2\x1b.gravity.PerformanceMetricsR\vperformance\x12?\n" +
	"\rmessage_stats\x18\x17 \x01(\v2\x1a.gravity.MessageStatisticsR\fmessageStats\x12E\n" +
	"\x0esystem_metrics\x18\x18 \x01(\v2\x1e.gravity.SystemResourceMetricsR\rsystemMetrics\x12C\n" +
	"\x0fhistorical_data\x18) \x01(\v2\x1a.gravity.HistoricalMetricsR\x0ehistoricalData\"\xeb\x05\n" +
	"\x15GRPCConnectionMetrics\x12\x1b\n" +
	"\tpool_size\x18\x01 \x01(\x05R\bpoolSize\x12-\n" +
	"\x12active_connections\x18\x02 \x01(\x05R\x11activeConnections\x12)\n" +
	"\x10idle_connections\x18\x03 \x01(\x05R\x0fidleConnections\x12-\n" +
	"\x12failed_connections\x18\x04 \x01(\x05R\x11failedConnections\x12+\n" +
	"\x11connection_states\x18\x05 \x03(\tR\x10connectionStates\x12#\n" +
	"\rtotal_streams\x18\v \x01(\x05R\ftotalStreams\x12'\n" +
	"\x0fcontrol_streams\x18\f \x01(\x05R\x0econtrolStreams\x12%\n" +
	"\x0etunnel_streams\x18\r \x01(\x05R\rtunnelStreams\x12'\n" +
	"\x0fhealthy_streams\x18\x0e \x01(\x05R\x0ehealthyStreams\x12%\n" +
	"\x0eactive_streams\x18\x0f \x01(\x05R\ractiveStreams\x12+\n" +
	"\x11stream_allocation\x18\x10 \x01(\tR\x10streamAllocation\x12)\n" +
	"\x10protocol_version\x18\x15 \x01(\tR\x0fprotocolVersion\x12/\n" +
	"\x13compression_enabled\x18\x16 \x01(\bR\x12compressionEnabled\x12\x1f\n" +
	"\vtls_version\x18\x17 \x01(\tR\n" +
	"tlsVersion\x12*\n" +
	"\x11last_health_check\x18\x1f \x01(\x03R\x0flastHealthCheck\x127\n" +
	"\x18health_check_interval_ns\x18  \x01(\x03R\x15healthCheckIntervalNs\x12+\n" +
	"\x11unhealthy_streams\x18! \x03(\tR\x10unhealthyStreams\"\x85\x0f\n" +
	"\x12PerformanceMetrics\x121\n" +
	"\x15avg_packet_latency_ns\x18\x01 \x01(\x03R\x12avgPacketLatencyNs\x121\n" +
	"\x15p95_packet_latency_ns\x18\x02 \x01(\x03R\x12p95PacketLatencyNs\x121\n" +
	"\x15p99_packet_latency_ns\x18\x03 \x01(\x03R\x12p99PacketLatencyNs\x121\n" +
	"\x15max_packet_latency_ns\x18\x04 \x01(\x03R\x12maxPacketLatencyNs\x123\n" +
	"\x16avg_control_latency_ns\x18\x05 \x01(\x03R\x13avgControlLatencyNs\x123\n" +
	"\x16p95_control_latency_ns\x18\x06 \x01(\x03R\x13p95ControlLatencyNs\x12,\n" +
	"\x12packets_per_second\x18\v \x01(\x01R\x10packetsPerSecond\x12(\n" +
	"\x10bytes_per_second\x18\f \x01(\x01R\x0ebytesPerSecond\x127\n" +
	"\x18control_messages_per_sec\x18\r \x01(\x01R\x15controlMessagesPerSec\x12\x1d\n" +
	"\n" +
	"error_rate\x18\x15 \x01(\x01R\terrorRate\x12!\n" +
	"\fpacket_drops\x18\x16 \x01(\x03R\vpacketDrops\x12#\n" +
	"\rstream_errors\x18\x17 \x01(\x03R\fstreamErrors\x12+\n" +
	"\x11connection_errors\x18\x18 \x01(\x03R\x10connectionErrors\x12'\n" +
	"\x0fhealthy_streams\x18\x1f \x01(\x03R\x0ehealthyStreams\x12#\n" +
	"\rtotal_streams\x18  \x01(\x03R\ftotalStreams\x12-\n" +
	"\x12active_connections\x18! \x01(\x03R\x11activeConnections\x12+\n" +
	"\x11unhealthy_streams\x18\" \x01(\x03R\x10unhealthyStreams\x12-\n" +
	"\x12stream_utilization\x18# \x01(\x01R\x11streamUtilization\x124\n" +
	"\x16circuit_breaker_states\x18) \x03(\tR\x14circuitBreakerStates\x120\n" +
	"\x14total_circuit_breaks\x18* \x01(\x03R\x12totalCircuitBreaks\x12/\n" +
	"\x14avg_recovery_time_ns\x18+ \x01(\x03R\x11avgRecoveryTimeNs\x12+\n" +
	"\x11compression_ratio\x183 \x01(\x01R\x10compressionRatio\x12\x1f\n" +
	"\vbytes_saved\x184 \x01(\x03R\n" +
	"bytesSaved\x12.\n" +
	"\x13compression_time_ns\x185 \x01(\x03R\x11compressionTimeNs\x122\n" +
	"\x15decompression_time_ns\x186 \x01(\x03R\x13decompressionTimeNs\x120\n" +
	"\x14total_retry_attempts\x18= \x01(\x03R\x12totalRetryAttempts\x12-\n" +
	"\x12successful_retries\x18> \x01(\x03R\x11successfulRetries\x12%\n" +
	"\x0efailed_retries\x18? \x01(\x03R\rfailedRetries\x12,\n" +
	"\x12retry_success_rate\x18@ \x01(\x01R\x10retrySuccessRate\x12)\n" +
	"\x10pool_utilization\x18G \x01(\x01R\x0fpoolUtilization\x12)\n" +
	"\x10idle_connections\x18H \x01(\x03R\x0fidleConnections\x12+\n" +
	"\x11connection_resets\x18I \x01(\x03R\x10connectionResets\x12,\n" +
	"\x12memory_usage_bytes\x18Q \x01(\x03R\x10memoryUsageBytes\x12(\n" +
	"\x10buffer_pool_size\x18R \x01(\x03R\x0ebufferPoolSize\x12(\n" +
	"\x10buffer_pool_hits\x18S \x01(\x03R\x0ebufferPoolHits\x12,\n" +
	"\x12buffer_pool_misses\x18T \x01(\x03R\x10bufferPoolMisses\x12!\n" +
	"\flast_updated\x18[ \x01(\x03R\vlastUpdated\x124\n" +
	"\x16collection_interval_ns\x18\\ \x01(\x03R\x14collectionIntervalNs\x12O\n" +
	"\fdocker_stats\x18e \x03(\v2,.gravity.PerformanceMetrics.DockerStatsEntryR\vdockerStats\x1a]\n" +
	"\x10DockerStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.gravity.DockerContainerStatsR\x05value:\x028\x01\"\xcc\x05\n" +
	"\x11MessageStatistics\x12!\n" +
	"\fpackets_sent\x18\x01 \x01(\x03R\vpacketsSent\x12)\n" +
	"\x10packets_received\x18\x02 \x01(\x03R\x0fpacketsReceived\x12'\n" +
	"\x0fpackets_dropped\x18\x03 \x01(\x03R\x0epacketsDropped\x12!\n" +
	"\fpacket_bytes\x18\x04 \x01(\x03R\vpacketBytes\x12&\n" +
	"\x0favg_packet_size\x18\x05 \x01(\x01R\ravgPacketSize\x122\n" +
	"\x15control_messages_sent\x18\v \x01(\x03R\x13controlMessagesSent\x12:\n" +
	"\x19control_messages_received\x18\f \x01(\x03R\x17controlMessagesReceived\x122\n" +
	"\x15control_message_bytes\x18\r \x01(\x03R\x13controlMessageBytes\x12X\n" +
	"\x10messages_by_type\x18\x15 \x03(\v2..gravity.MessageStatistics.MessagesByTypeEntryR\x0emessagesByType\x12,\n" +
	"\x12packets_per_second\x18\x1f \x01(\x01R\x10packetsPerSecond\x12(\n" +
	"\x10bytes_per_second\x18  \x01(\x01R\x0ebytesPerSecond\x12(\n" +
	"\x10packet_loss_rate\x18) \x01(\x01R\x0epacketLossRate\x122\n" +
	"\x15message_delivery_rate\x18* \x01(\x01R\x13messageDeliveryRate\x1aA\n" +
	"\x13MessagesByTypeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xfb\x03\n" +
	"\x15SystemResourceMetrics\x12,\n" +
	"\x12memory_usage_bytes\x18\x01 \x01(\x03R\x10memoryUsageBytes\x12&\n" +
	"\x0fmemory_usage_mb\x18\x02 \x01(\x01R\rmemoryUsageMb\x12)\n" +
	"\x10allocated_memory\x18\x03 \x01(\x03R\x0fallocatedMemory\x12'\n" +
	"\x10gc_pause_time_ns\x18\x04 \x01(\x03R\rgcPauseTimeNs\x12%\n" +
	"\x0enum_goroutines\x18\x05 \x01(\x05R\rnumGoroutines\x12*\n" +
	"\x11cpu_usage_percent\x18\v \x01(\x01R\x0fcpuUsagePercent\x12(\n" +
	"\x10buffer_pool_size\x18\x15 \x01(\x03R\x0ebufferPoolSize\x12(\n" +
	"\x10buffer_pool_hits\x18\x16 \x01(\x03R\x0ebufferPoolHits\x12,\n" +
	"\x12buffer_pool_misses\x18\x17 \x01(\x03R\x10bufferPoolMisses\x12/\n" +
	"\x14buffer_pool_hit_rate\x18\x18 \x01(\x01R\x11bufferPoolHitRate\x122\n" +
	"\x15open_file_descriptors\x18\x1f \x01(\x05R\x13openFileDescriptors\"\xd2\x02\n" +
	"\x11HistoricalMetrics\x12H\n" +
	"\x12throughput_history\x18\x01 \x03(\v2\x19.gravity.ThroughputSampleR\x11throughputHistory\x12?\n" +
	"\x0flatency_history\x18\x02 \x03(\v2\x16.gravity.LatencySampleR\x0elatencyHistory\x12F\n" +
	"\x12error_rate_history\x18\x03 \x03(\v2\x18.gravity.ErrorRateSampleR\x10errorRateHistory\x12<\n" +
	"\x0ehealth_history\x18\x04 \x03(\v2\x15.gravity.HealthSampleR\rhealthHistory\x12,\n" +
	"\x12max_history_length\x18\x05 \x01(\x05R\x10maxHistoryLength\"\xa6\x01\n" +
	"\x10ThroughputSample\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12&\n" +
	"\x0fpackets_per_sec\x18\x02 \x01(\x01R\rpacketsPerSec\x12\"\n" +
	"\rbytes_per_sec\x18\x03 \x01(\x01R\vbytesPerSec\x12(\n" +
	"\x10messages_per_sec\x18\x04 \x01(\x01R\x0emessagesPerSec\"\xc5\x01\n" +
	"\rLatencySample\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12$\n" +
	"\x0eavg_latency_ns\x18\x02 \x01(\x03R\favgLatencyNs\x12$\n" +
	"\x0ep95_latency_ns\x18\x03 \x01(\x03R\fp95LatencyNs\x12$\n" +
	"\x0ep99_latency_ns\x18\x04 \x01(\x03R\fp99LatencyNs\x12$\n" +
	"\x0emax_latency_ns\x18\x05 \x01(\x03R\fmaxLatencyNs\"q\n" +
	"\x0fErrorRateSample\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1d\n" +
	"\n" +
	"error_rate\x18\x02 \x01(\x01R\terrorRate\x12!\n" +
	"\ftotal_errors\x18\x03 \x01(\x03R\vtotalErrors\"\xcc\x01\n" +
	"\fHealthSample\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12'\n" +
	"\x0fhealthy_streams\x18\x02 \x01(\x05R\x0ehealthyStreams\x12#\n" +
	"\rtotal_streams\x18\x03 \x01(\x05R\ftotalStreams\x12-\n" +
	"\x12active_connections\x18\x04 \x01(\x05R\x11activeConnections\x12!\n" +
	"\fhealth_score\x18\x05 \x01(\x01R\vhealthScore\"\xb0\x0e\n" +
	"\x14DockerContainerStats\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12%\n" +
	"\x0econtainer_name\x18\x02 \x01(\tR\rcontainerName\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12#\n" +
	"\rdeployment_id\x18\x04 \x01(\tR\fdeploymentId\x12\x16\n" +
	"\x06status\x18\v \x01(\tR\x06status\x12\x16\n" +
	"\x06paused\x18\f \x01(\bR\x06paused\x12\x1f\n" +
	"\vpaused_time\x18\r \x01(\x03R\n" +
	"pausedTime\x12!\n" +
	"\fstarted_time\x18\x0e \x01(\x03R\vstartedTime\x12#\n" +
	"\rrestart_count\x18\x0f \x01(\x03R\frestartCount\x12*\n" +
	"\x11cpu_usage_percent\x18\x15 \x01(\x01R\x0fcpuUsagePercent\x12+\n" +
	"\x12cpu_usage_total_ns\x18\x16 \x01(\x04R\x0fcpuUsageTotalNs\x12-\n" +
	"\x13cpu_usage_kernel_ns\x18\x17 \x01(\x04R\x10cpuUsageKernelNs\x12)\n" +
	"\x11cpu_usage_user_ns\x18\x18 \x01(\x04R\x0ecpuUsageUserNs\x122\n" +
	"\x15cpu_throttled_periods\x18\x19 \x01(\x04R\x13cpuThrottledPeriods\x121\n" +
	"\x15cpu_throttled_time_ns\x18\x1a \x01(\x04R\x12cpuThrottledTimeNs\x12\x1b\n" +
	"\tcpu_limit\x18\x1b \x01(\x01R\bcpuLimit\x12,\n" +
	"\x12memory_usage_bytes\x18\x1f \x01(\x04R\x10memoryUsageBytes\x12,\n" +
	"\x12memory_limit_bytes\x18  \x01(\x04R\x10memoryLimitBytes\x120\n" +
	"\x14memory_usage_percent\x18! \x01(\x01R\x12memoryUsagePercent\x123\n" +
	"\x16memory_max_usage_bytes\x18\" \x01(\x04R\x13memoryMaxUsageBytes\x12,\n" +
	"\x12memory_cache_bytes\x18# \x01(\x04R\x10memoryCacheBytes\x12(\n" +
	"\x10memory_rss_bytes\x18$ \x01(\x04R\x0ememoryRssBytes\x12*\n" +
	"\x11memory_swap_bytes\x18% \x01(\x04R\x0fmemorySwapBytes\x125\n" +
	"\x17memory_swap_limit_bytes\x18& \x01(\x04R\x14memorySwapLimitBytes\x12\x1b\n" +
	"\toom_kills\x18' \x01(\x04R\boomKills\x12(\n" +
	"\x10network_rx_bytes\x18) \x01(\x04R\x0enetworkRxBytes\x12(\n" +
	"\x10network_tx_bytes\x18* \x01(\x04R\x0enetworkTxBytes\x12,\n" +
	"\x12network_rx_packets\x18+ \x01(\x04R\x10networkRxPackets\x12,\n" +
	"\x12network_tx_packets\x18, \x01(\x04R\x10networkTxPackets\x12*\n" +
	"\x11network_rx_errors\x18- \x01(\x04R\x0fnetworkRxErrors\x12*\n" +
	"\x11network_tx_errors\x18. \x01(\x04R\x0fnetworkTxErrors\x12,\n" +
	"\x12network_rx_dropped\x18/ \x01(\x04R\x10networkRxDropped\x12,\n" +
	"\x12network_tx_dropped\x180 \x01(\x04R\x10networkTxDropped\x12-\n" +
	"\x13block_io_read_bytes\x183 \x01(\x04R\x10blockIoReadBytes\x12/\n" +
	"\x14block_io_write_bytes\x184 \x01(\x04R\x11blockIoWriteBytes\x12)\n" +
	"\x11block_io_read_ops\x185 \x01(\x04R\x0eblockIoReadOps\x12+\n" +
	"\x12block_io_write_ops\x186 \x01(\x04R\x0fblockIoWriteOps\x12!\n" +
	"\fpids_current\x18= \x01(\x04R\vpidsCurrent\x12\x1d\n" +
	"\n" +
	"pids_limit\x18> \x01(\x04R\tpidsLimit\x12!\n" +
	"\fipv4_address\x18G \x01(\tR\vipv4Address\x12!\n" +
	"\fipv6_address\x18H \x01(\tR\vipv6Address\x12\x1a\n" +
	"\bhostname\x18I \x01(\tR\bhostname\x12+\n" +
	"\x11inflight_requests\x18Q \x01(\x03R\x10inflightRequests\x12\x18\n" +
	"\ahealthy\x18[ \x01(\bR\ahealthy\x12!\n" +
	"\flast_updated\x18\\ \x01(\x03R\vlastUpdated\"4\n" +
	"\n" +
	"ConfigItem\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"W\n" +
	"\x19DeploymentMetadataRequest\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12\x15\n" +
	"\x06org_id\x18\x02 \x01(\tR\x05orgId\"\x88\x02\n" +
	"\x1aDeploymentMetadataResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12:\n" +
	"\rcode_metadata\x18\x03 \x01(\v2\x15.gravity.CodeMetadataR\fcodeMetadata\x12@\n" +
	"\x0fdeployment_cert\x18\x04 \x01(\v2\x17.gravity.DeploymentCertR\x0edeploymentCert\x12\x1d\n" +
	"\n" +
	"otlp_token\x18\x05 \x01(\tR\totlpToken\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x06 \x01(\tR\tauthToken2\xcb\x01\n" +
	"\x0eGravityControl\x12W\n" +
	"\x10ProvisionMachine\x12 .gravity.ProvisionMachineRequest\x1a!.gravity.ProvisionMachineResponse\x12`\n" +
	"\x15GetDeploymentMetadata\x12\".gravity.DeploymentMetadataRequest\x1a#.gravity.DeploymentMetadataResponse2\x9b\x01\n" +
	"\rGravityTunnel\x12G\n" +
	"\x0fEstablishTunnel\x12\x17.gravity.ControlMessage\x1a\x17.gravity.ControlMessage(\x010\x01\x12A\n" +
	"\rStreamPackets\x12\x15.gravity.TunnelPacket\x1a\x15.gravity.TunnelPacket(\x010\x01B.Z,github.com/agentuity/go-common/gravity/protob\x06proto3"

var (
	file_gravity_proto_rawDescOnce sync.Once
	file_gravity_proto_rawDescData []byte
)

func file_gravity_proto_rawDescGZIP() []byte {
	file_gravity_proto_rawDescOnce.Do(func() {
		file_gravity_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gravity_proto_rawDesc), len(file_gravity_proto_rawDesc)))
	})
	return file_gravity_proto_rawDescData
}

var file_gravity_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_gravity_proto_goTypes = []any{
	(*ProvisionMachineRequest)(nil),     // 0: gravity.ProvisionMachineRequest
	(*ProvisionMachineResponse)(nil),    // 1: gravity.ProvisionMachineResponse
	(*ControlMessage)(nil),              // 2: gravity.ControlMessage
	(*TunnelPacket)(nil),                // 3: gravity.TunnelPacket
	(*ClientCapabilities)(nil),          // 4: gravity.ClientCapabilities
	(*ConnectRequest)(nil),              // 5: gravity.ConnectRequest
	(*ConnectResponse)(nil),             // 6: gravity.ConnectResponse
	(*RouteDeploymentRequest)(nil),      // 7: gravity.RouteDeploymentRequest
	(*RouteDeploymentResponse)(nil),     // 8: gravity.RouteDeploymentResponse
	(*UnprovisionRequest)(nil),          // 9: gravity.UnprovisionRequest
	(*ReportRequest)(nil),               // 10: gravity.ReportRequest
	(*ActivityRequest)(nil),             // 11: gravity.ActivityRequest
	(*PingRequest)(nil),                 // 12: gravity.PingRequest
	(*PongResponse)(nil),                // 13: gravity.PongResponse
	(*CloseRequest)(nil),                // 14: gravity.CloseRequest
	(*PauseRequest)(nil),                // 15: gravity.PauseRequest
	(*ResumeRequest)(nil),               // 16: gravity.ResumeRequest
	(*ProtocolResponse)(nil),            // 17: gravity.ProtocolResponse
	(*ProtocolEvent)(nil),               // 18: gravity.ProtocolEvent
	(*ConfigurationUpdate)(nil),         // 19: gravity.ConfigurationUpdate
	(*ConfigurationUpdateResponse)(nil), // 20: gravity.ConfigurationUpdateResponse
	(*HostInfo)(nil),                    // 21: gravity.HostInfo
	(*ExistingDeployment)(nil),          // 22: gravity.ExistingDeployment
	(*DeploymentSpec)(nil),              // 23: gravity.DeploymentSpec
	(*PortMapping)(nil),                 // 24: gravity.PortMapping
	(*VolumeMount)(nil),                 // 25: gravity.VolumeMount
	(*ResourceRequirements)(nil),        // 26: gravity.ResourceRequirements
	(*DeploymentCert)(nil),              // 27: gravity.DeploymentCert
	(*CodeMetadata)(nil),                // 28: gravity.CodeMetadata
	(*Resource)(nil),                    // 29: gravity.Resource
	(*HostMapping)(nil),                 // 30: gravity.HostMapping
	(*HTTPEvent)(nil),                   // 31: gravity.HTTPEvent
	(*SessionInfo)(nil),                 // 32: gravity.SessionInfo
	(*ServerMetrics)(nil),               // 33: gravity.ServerMetrics
	(*GRPCConnectionMetrics)(nil),       // 34: gravity.GRPCConnectionMetrics
	(*PerformanceMetrics)(nil),          // 35: gravity.PerformanceMetrics
	(*MessageStatistics)(nil),           // 36: gravity.MessageStatistics
	(*SystemResourceMetrics)(nil),       // 37: gravity.SystemResourceMetrics
	(*HistoricalMetrics)(nil),           // 38: gravity.HistoricalMetrics
	(*ThroughputSample)(nil),            // 39: gravity.ThroughputSample
	(*LatencySample)(nil),               // 40: gravity.LatencySample
	(*ErrorRateSample)(nil),             // 41: gravity.ErrorRateSample
	(*HealthSample)(nil),                // 42: gravity.HealthSample
	(*DockerContainerStats)(nil),        // 43: gravity.DockerContainerStats
	(*ConfigItem)(nil),                  // 44: gravity.ConfigItem
	(*DeploymentMetadataRequest)(nil),   // 45: gravity.DeploymentMetadataRequest
	(*DeploymentMetadataResponse)(nil),  // 46: gravity.DeploymentMetadataResponse
	nil,                                 // 47: gravity.PerformanceMetrics.DockerStatsEntry
	nil,                                 // 48: gravity.MessageStatistics.MessagesByTypeEntry
	(*timestamppb.Timestamp)(nil),       // 49: google.protobuf.Timestamp
}
var file_gravity_proto_depIdxs = []int32{
	49, // 0: gravity.ProvisionMachineResponse.expires:type_name -> google.protobuf.Timestamp
	5,  // 1: gravity.ControlMessage.connect:type_name -> gravity.ConnectRequest
	6,  // 2: gravity.ControlMessage.connect_response:type_name -> gravity.ConnectResponse
	14, // 3: gravity.ControlMessage.close:type_name -> gravity.CloseRequest
	7,  // 4: gravity.ControlMessage.route_deployment:type_name -> gravity.RouteDeploymentRequest
	8,  // 5: gravity.ControlMessage.route_deployment_response:type_name -> gravity.RouteDeploymentResponse
	9,  // 6: gravity.ControlMessage.unprovision:type_name -> gravity.UnprovisionRequest
	12, // 7: gravity.ControlMessage.ping:type_name -> gravity.PingRequest
	13, // 8: gravity.ControlMessage.pong:type_name -> gravity.PongResponse
	10, // 9: gravity.ControlMessage.report:type_name -> gravity.ReportRequest
	11, // 10: gravity.ControlMessage.activity:type_name -> gravity.ActivityRequest
	15, // 11: gravity.ControlMessage.pause:type_name -> gravity.PauseRequest
	16, // 12: gravity.ControlMessage.resume:type_name -> gravity.ResumeRequest
	19, // 13: gravity.ControlMessage.config_update:type_name -> gravity.ConfigurationUpdate
	20, // 14: gravity.ControlMessage.config_update_response:type_name -> gravity.ConfigurationUpdateResponse
	17, // 15: gravity.ControlMessage.response:type_name -> gravity.ProtocolResponse
	18, // 16: gravity.ControlMessage.event:type_name -> gravity.ProtocolEvent
	4,  // 17: gravity.ConnectRequest.capabilities:type_name -> gravity.ClientCapabilities
	22, // 18: gravity.ConnectRequest.deployments:type_name -> gravity.ExistingDeployment
	21, // 19: gravity.ConnectRequest.host_info:type_name -> gravity.HostInfo
	30, // 20: gravity.ConnectResponse.host_mapping:type_name -> gravity.HostMapping
	33, // 21: gravity.ReportRequest.metrics:type_name -> gravity.ServerMetrics
	31, // 22: gravity.ActivityRequest.events:type_name -> gravity.HTTPEvent
	49, // 23: gravity.PingRequest.timestamp:type_name -> google.protobuf.Timestamp
	49, // 24: gravity.PongResponse.timestamp:type_name -> google.protobuf.Timestamp
	44, // 25: gravity.ConfigurationUpdate.config:type_name -> gravity.ConfigItem
	23, // 26: gravity.ExistingDeployment.spec:type_name -> gravity.DeploymentSpec
	49, // 27: gravity.ExistingDeployment.started:type_name -> google.protobuf.Timestamp
	26, // 28: gravity.DeploymentSpec.resources:type_name -> gravity.ResourceRequirements
	27, // 29: gravity.DeploymentSpec.organization_cert:type_name -> gravity.DeploymentCert
	24, // 30: gravity.Resource.ports:type_name -> gravity.PortMapping
	49, // 31: gravity.Resource.created:type_name -> google.protobuf.Timestamp
	49, // 32: gravity.SessionInfo.connected:type_name -> google.protobuf.Timestamp
	34, // 33: gravity.ServerMetrics.grpc_metrics:type_name -> gravity.GRPCConnectionMetrics
	35, // 34: gravity.ServerMetrics.performance:type_name -> gravity.PerformanceMetrics
	36, // 35: gravity.ServerMetrics.message_stats:type_name -> gravity.MessageStatistics
	37, // 36: gravity.ServerMetrics.system_metrics:type_name -> gravity.SystemResourceMetrics
	38, // 37: gravity.ServerMetrics.historical_data:type_name -> gravity.HistoricalMetrics
	47, // 38: gravity.PerformanceMetrics.docker_stats:type_name -> gravity.PerformanceMetrics.DockerStatsEntry
	48, // 39: gravity.MessageStatistics.messages_by_type:type_name -> gravity.MessageStatistics.MessagesByTypeEntry
	39, // 40: gravity.HistoricalMetrics.throughput_history:type_name -> gravity.ThroughputSample
	40, // 41: gravity.HistoricalMetrics.latency_history:type_name -> gravity.LatencySample
	41, // 42: gravity.HistoricalMetrics.error_rate_history:type_name -> gravity.ErrorRateSample
	42, // 43: gravity.HistoricalMetrics.health_history:type_name -> gravity.HealthSample
	28, // 44: gravity.DeploymentMetadataResponse.code_metadata:type_name -> gravity.CodeMetadata
	27, // 45: gravity.DeploymentMetadataResponse.deployment_cert:type_name -> gravity.DeploymentCert
	43, // 46: gravity.PerformanceMetrics.DockerStatsEntry.value:type_name -> gravity.DockerContainerStats
	0,  // 47: gravity.GravityControl.ProvisionMachine:input_type -> gravity.ProvisionMachineRequest
	45, // 48: gravity.GravityControl.GetDeploymentMetadata:input_type -> gravity.DeploymentMetadataRequest
	2,  // 49: gravity.GravityTunnel.EstablishTunnel:input_type -> gravity.ControlMessage
	3,  // 50: gravity.GravityTunnel.StreamPackets:input_type -> gravity.TunnelPacket
	1,  // 51: gravity.GravityControl.ProvisionMachine:output_type -> gravity.ProvisionMachineResponse
	46, // 52: gravity.GravityControl.GetDeploymentMetadata:output_type -> gravity.DeploymentMetadataResponse
	2,  // 53: gravity.GravityTunnel.EstablishTunnel:output_type -> gravity.ControlMessage
	3,  // 54: gravity.GravityTunnel.StreamPackets:output_type -> gravity.TunnelPacket
	51, // [51:55] is the sub-list for method output_type
	47, // [47:51] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_gravity_proto_init() }
func file_gravity_proto_init() {
	if File_gravity_proto != nil {
		return
	}
	file_gravity_proto_msgTypes[2].OneofWrappers = []any{
		(*ControlMessage_Connect)(nil),
		(*ControlMessage_ConnectResponse)(nil),
		(*ControlMessage_Close)(nil),
		(*ControlMessage_RouteDeployment)(nil),
		(*ControlMessage_RouteDeploymentResponse)(nil),
		(*ControlMessage_Unprovision)(nil),
		(*ControlMessage_Ping)(nil),
		(*ControlMessage_Pong)(nil),
		(*ControlMessage_Report)(nil),
		(*ControlMessage_Activity)(nil),
		(*ControlMessage_Pause)(nil),
		(*ControlMessage_Resume)(nil),
		(*ControlMessage_ConfigUpdate)(nil),
		(*ControlMessage_ConfigUpdateResponse)(nil),
		(*ControlMessage_Response)(nil),
		(*ControlMessage_Event)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gravity_proto_rawDesc), len(file_gravity_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_gravity_proto_goTypes,
		DependencyIndexes: file_gravity_proto_depIdxs,
		MessageInfos:      file_gravity_proto_msgTypes,
	}.Build()
	File_gravity_proto = out.File
	file_gravity_proto_goTypes = nil
	file_gravity_proto_depIdxs = nil
}
