//go:build ignore

package main

import (
	"fmt"
	"os"
	"strings"

	"github.com/agentuity/go-common/network"
)

func main() {
	services := []string{"catalyst", "otel"}

	output := `// Code generated by go generate; DO NOT EDIT.
// To regenerate, run: go generate ./network

package network

`

	for _, service := range services {
		ip := genStaticServiceIP(service)
		varName := fmt.Sprintf("%sServiceIP", capitalize(service))
		output += fmt.Sprintf("const %s = \"%s\"\n", varName, ip)
	}

	err := os.WriteFile("static_generated.go", []byte(output), 0644)
	if err != nil {
		panic(err)
	}
}

func capitalize(s string) string {
	if len(s) == 0 {
		return s
	}
	return strings.ToUpper(s[:1]) + s[1:]
}

func genStaticServiceIP(serviceName string) string {
	addr := network.NewIPv6Address(network.RegionGlobal, network.NetworkPrivateServices, serviceName, "", "")
	return addr.String()
}
